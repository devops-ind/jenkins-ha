---
# Local Development Deployment Playbook
# This playbook deploys Jenkins HA infrastructure locally for development

- name: Local Development Jenkins Infrastructure Deployment
  hosts: localhost
  connection: local
  become: yes
  gather_facts: yes
  vars:
    deployment_environment: "local"
    local_deployment: true
    
  pre_tasks:
    - name: Display local deployment information
      debug:
        msg: |
          🚀 Starting Local Development Deployment
          
          📋 Configuration:
          Environment: {{ deployment_environment }}
          Mode: {{ deployment_mode | default('local') }}
          Jenkins URL: {{ jenkins_local_url | default('http://localhost:8080') }}
          Grafana URL: {{ grafana_local_url | default('http://localhost:3000') }}
          Prometheus URL: {{ prometheus_local_url | default('http://localhost:9090') }}
          
          🔧 Services to Deploy:
          • Jenkins Master ({{ jenkins_master_memory | default('2g') }} memory)
          • Jenkins Agents (DIND, Maven, Python, Node.js)
          • Monitoring Stack (Prometheus, Grafana)
          • Backup System (if enabled)

    - name: Check Docker availability
      command: podman info
      register: docker_check
      failed_when: docker_check.rc != 0
      changed_when: false
      
    - name: Ensure required directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/tmp/jenkins-backup"
        - "/tmp/jenkins-backup-local"
        - "/tmp/shared"
        - "{{ jenkins_home_dir | default('/var/jenkins') }}"

  roles:
    - role: common
      tags: ['common', 'bootstrap']
      become: yes
      
    - role: docker
      tags: ['docker', 'containers']
      
      
    - role: jenkins-images
      tags: ['images', 'build']
      when: build_jenkins_images | default(false)
      
    - role: jenkins-master
      tags: ['jenkins', 'infrastructure']
      
    - role: monitoring
      tags: ['monitoring', 'prometheus', 'grafana']
      when: monitoring_enabled | default(true)
      
    - role: backup
      tags: ['backup', 'storage']
      when: backup_enabled | default(false)

  post_tasks:
    - name: Wait for Jenkins to be ready
      uri:
        url: "{{ jenkins_local_url | default('http://localhost:8080') }}/login"
        method: GET
        status_code: [200, 403]
        timeout: 10
      register: jenkins_ready
      until: jenkins_ready is succeeded
      retries: 30
      delay: 10
      ignore_errors: yes
      
    - name: Wait for Grafana to be ready
      uri:
        url: "{{ grafana_local_url | default('http://localhost:3000') }}/api/health"
        method: GET
        timeout: 10
      register: grafana_ready
      until: grafana_ready is succeeded
      retries: 20
      delay: 10
      ignore_errors: yes
      when: monitoring_enabled | default(true)
      
    - name: Display local deployment summary
      debug:
        msg: |
          🎉 Local Development Deployment Completed!
          
          📋 Access URLs:
          Jenkins: {{ jenkins_local_url | default('http://localhost:8080') }}
          {% if monitoring_enabled | default(true) %}
          Grafana: {{ grafana_local_url | default('http://localhost:3000') }}
          Prometheus: {{ prometheus_local_url | default('http://localhost:9090') }}
          {% endif %}
          
          🔐 Default Credentials:
          Jenkins: admin / {{ vault_jenkins_admin_password | default('admin123') }}
          {% if monitoring_enabled | default(true) %}
          Grafana: admin / {{ vault_grafana_admin_password | default('admin') }}
          {% endif %}
          
          🐳 Running Containers:
          Jenkins Master: jenkins-master-local
          Jenkins Agents: jenkins-agent-*-local
          {% if monitoring_enabled | default(true) %}
          Prometheus: prometheus-local
          Grafana: grafana-local
          {% endif %}
          
          🛠️ Development Commands:
          • Check containers: docker ps
          • View logs: docker logs <container-name>
          • Access Jenkins CLI: docker exec -it jenkins-master-local jenkins-cli
          • Stop all: docker stop $(docker ps -q)
          
          ✨ Happy Local Development! ✨