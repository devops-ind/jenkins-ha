---
all:
  vars:
    ansible_user: "{{ vault_ansible_user | default('ansible') }}"
    # SSH key removed - dynamic agents use container-based authentication
    environment: production
    deployment_mode: "production"
    become: true
    ansible_python_interpreter: /usr/bin/python3
    # Network security settings for Ansible connections only
    # Connection timeout and retry settings for production
    ansible_timeout: 30
    ansible_ssh_retries: 3

localhost:
  hosts:
    localhost:
      ansible_connection: local
      ansible_python_interpreter: /usr/bin/python3

# Production Jenkins Masters - High Availability Configuration
jenkins_masters:
  vars:
    # HA-specific variables
    jenkins_ha_enabled: true
    jenkins_cluster_mode: true
    jenkins_master_port: 8080
    jenkins_jnlp_port: 50000
    jenkins_master_memory: "4g"
    jenkins_master_cpu_limit: "2"
    # SSL Configuration
    jenkins_ssl_enabled: true
    jenkins_ssl_port: 8443
    # Backup configuration
    jenkins_backup_enabled: true
    backup_retention_days: 30
  hosts:
    jenkins-master-01:
      ansible_host: "{{ vault_jenkins_master_01_ip | default('10.0.1.10') }}"
      jenkins_master_priority: 100  # Primary master
      jenkins_node_name: "jenkins-master-01"
      jenkins_master_role: "primary"
      jenkins_container_name: "jenkins-master-primary"
      # Resource allocation
      jenkins_master_memory: "6g"  # Primary gets more resources
      jenkins_master_cpu_limit: "3"
      # Network configuration
      jenkins_master_ip: "{{ vault_jenkins_master_01_ip | default('10.0.1.10') }}"
      jenkins_master_hostname: "jenkins-master-01.company.local"
      # Storage configuration
      jenkins_home_volume: "jenkins-master-01-home"
      jenkins_data_volume: "jenkins-master-01-data"
    
    jenkins-master-02:
      ansible_host: "{{ vault_jenkins_master_02_ip | default('10.0.1.11') }}"
      jenkins_master_priority: 90   # Backup master
      jenkins_node_name: "jenkins-master-02"
      jenkins_master_role: "backup"
      jenkins_container_name: "jenkins-master-backup"
      # Resource allocation
      jenkins_master_memory: "4g"
      jenkins_master_cpu_limit: "2"
      # Network configuration
      jenkins_master_ip: "{{ vault_jenkins_master_02_ip | default('10.0.1.11') }}"
      jenkins_master_hostname: "jenkins-master-02.company.local"
      # Storage configuration
      jenkins_home_volume: "jenkins-master-02-home"
      jenkins_data_volume: "jenkins-master-02-data"

# Dynamic Jenkins Agents - Provisioned via Docker Cloud Plugin
# No static agent hosts needed - all agents are spawned dynamically
# Refer to JCasC configuration for dynamic agent templates

# Production Monitoring Stack
monitoring:
  vars:
    monitoring_enabled: true
    prometheus_enabled: true
    grafana_enabled: true
    alertmanager_enabled: true
    node_exporter_enabled: true
    # Resource allocation
    prometheus_memory: "4g"
    prometheus_cpu_limit: "2"
    grafana_memory: "2g"
    grafana_cpu_limit: "1"
    # Retention and storage
    prometheus_retention: "90d"
    prometheus_storage_size: "100Gi"
    grafana_data_retention: "90d"
  hosts:
    monitoring-01:
      ansible_host: "{{ vault_monitoring_01_ip | default('10.0.1.30') }}"
      monitoring_node_name: "monitoring-01"
      # Service ports
      prometheus_port: 9090
      prometheus_ssl_port: 9443
      grafana_port: 3000
      grafana_ssl_port: 3443
      alertmanager_port: 9093
      alertmanager_ssl_port: 9493
      node_exporter_port: 9100
      # Network configuration
      monitoring_ip: "{{ vault_monitoring_01_ip | default('10.0.1.30') }}"
      monitoring_hostname: "monitoring-01.company.local"
      # SSL configuration
      monitoring_ssl_enabled: true
      prometheus_ssl_cert_path: "/etc/ssl/certs/prometheus.crt"
      prometheus_ssl_key_path: "/etc/ssl/private/prometheus.key"
      grafana_ssl_cert_path: "/etc/ssl/certs/grafana.crt"
      grafana_ssl_key_path: "/etc/ssl/private/grafana.key"
      # Storage configuration
      prometheus_data_volume: "prometheus-data"
      grafana_data_volume: "grafana-data"
      alertmanager_data_volume: "alertmanager-data"

# Production Harbor Registry
harbor:
  vars:
    harbor_enabled: true
    harbor_ssl_enabled: true
    harbor_admin_password: "{{ vault_harbor_admin_password }}"
    harbor_database_password: "{{ vault_harbor_database_password }}"
    harbor_registry_storage_size: "500Gi"
    # Security configuration
    harbor_token_expiration: 30
    harbor_scan_all_policy: "daily"
    harbor_vulnerability_severity: "high"
  hosts:
    harbor-01:
      ansible_host: "{{ vault_harbor_01_ip | default('10.0.1.40') }}"
      harbor_node_name: "harbor-01"
      # Service ports
      harbor_port: 80
      harbor_ssl_port: 443
      harbor_db_port: 5432
      harbor_redis_port: 6379
      # Network configuration
      harbor_ip: "{{ vault_harbor_01_ip | default('10.0.1.40') }}"
      harbor_hostname: "harbor.company.com"
      harbor_registry_url: "harbor.company.com"
      # SSL configuration
      harbor_ssl_cert_path: "/etc/ssl/certs/harbor.crt"
      harbor_ssl_key_path: "/etc/ssl/private/harbor.key"
      # Storage configuration
      harbor_data_volume: "harbor-data"
      harbor_database_volume: "harbor-database"
      harbor_redis_volume: "harbor-redis"
      harbor_registry_volume: "harbor-registry"
      # Project configuration
      harbor_projects:
        - name: "jenkins-prod"
          public: false
          vulnerability_scanning: true
        - name: "jenkins-images"
          public: false
          vulnerability_scanning: true

# High Availability Load Balancer Configuration
load_balancers:
  vars:
    haproxy_enabled: true
    keepalived_enabled: true
    vip_interface: "eth0"
    vip_auth_pass: "{{ vault_vip_auth_pass }}"
    # Load balancer configuration
    haproxy_stats_enabled: true
    haproxy_stats_port: 8404
    haproxy_stats_user: "{{ vault_haproxy_stats_user }}"
    haproxy_stats_password: "{{ vault_haproxy_stats_password }}"
  hosts:
    lb-01:
      ansible_host: "{{ vault_lb_01_ip | default('10.0.1.50') }}"
      keepalived_priority: 110  # Master
      keepalived_state: "MASTER"
      lb_node_name: "lb-01"
      # Virtual IP configuration
      jenkins_vip: "{{ vault_jenkins_vip | default('10.0.1.100') }}"
      monitoring_vip: "{{ vault_monitoring_vip | default('10.0.1.101') }}"
      harbor_vip: "{{ vault_harbor_vip | default('10.0.1.102') }}"
    
    lb-02:
      ansible_host: "{{ vault_lb_02_ip | default('10.0.1.51') }}"
      keepalived_priority: 100  # Backup
      keepalived_state: "BACKUP"
      lb_node_name: "lb-02"
      # Virtual IP configuration (same as master)
      jenkins_vip: "{{ vault_jenkins_vip | default('10.0.1.100') }}"
      monitoring_vip: "{{ vault_monitoring_vip | default('10.0.1.101') }}"
      harbor_vip: "{{ vault_harbor_vip | default('10.0.1.102') }}"

# Shared Storage Nodes (NFS/GlusterFS)
shared_storage:
  vars:
    shared_storage_enabled: true
    shared_storage_type: "nfs"  # or "glusterfs"
    nfs_export_path: "/export/jenkins"
    nfs_mount_path: "/shared"
    # Storage configuration
    storage_size: "1Ti"
    backup_enabled: true
    backup_schedule: "0 3 * * *"  # Daily at 3 AM
  hosts:
    storage-01:
      ansible_host: "{{ vault_storage_01_ip | default('10.0.1.60') }}"
      storage_node_name: "storage-01"
      storage_role: "primary"
      # NFS configuration
      nfs_server_ip: "{{ vault_storage_01_ip | default('10.0.1.60') }}"
      nfs_exports:
        - path: "/export/jenkins/home"
          clients: "10.0.1.0/24(rw,sync,no_root_squash)"
        - path: "/export/jenkins/backup"
          clients: "10.0.1.0/24(rw,sync,no_root_squash)"
        - path: "/export/jenkins/shared"
          clients: "10.0.1.0/24(rw,sync,no_root_squash)"
