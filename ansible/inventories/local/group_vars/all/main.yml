---
# Local Development Environment Configuration
# This file overrides defaults from group_vars/all/ for local development

# Environment identification
deployment_environment: "local"
environment_tier: "dev"
deployment_mode: "devcontainer"  # Changed to devcontainer for better container compatibility

# Local development versions
jenkins_version: "2.426.1"
docker_version: "24.0.7"
timezone: "UTC"

# Local networking configuration (using 10.5.6.12 with different ports)
jenkins_network_name: "jenkins-dev-net"
jenkins_network_subnet: "172.25.0.0/16"
monitoring_network_name: "monitoring-dev-net"
monitoring_network_subnet: "172.26.0.0/16"

# Local storage configuration
jenkins_home_dir: "/var/jenkins"
jenkins_data_dir: "/var/lib/jenkins"
backup_location: "/tmp/jenkins-backup"
shared_storage_mount: "/tmp/shared"
shared_storage_enabled: false  # Disabled for local dev

# Local security settings (relaxed for development)
jenkins_enable_security: true
jenkins_security_realm: "local"  # Keep default local auth
jenkins_authorization_strategy: "logged_in_users_can_do_anything"
enable_ssl: true  # Enable SSL for local development testing
ssl_enabled: true  # Enable SSL for HAProxy with wildcard certificate
jenkins_enable_csrf: false  # Disabled for easier local development
jenkins_admin_password: "admin123"  # Simple password for local dev

# SSL Configuration for local development
ssl_certificate_dir: "/etc/ssl/certs"
ssl_private_key_dir: "/etc/ssl/private"
ssl_ca_dir: "/etc/ssl/ca"
ssl_csr_dir: "/etc/ssl/csr"
ssl_certificate_path: "/etc/ssl/certs/wildcard-{{ jenkins_domain }}-haproxy.pem"

# Local backup configuration (minimal for development)
jenkins_backup_enabled: false  # Disabled for local dev
backup_enabled: false
backup_schedule: "0 4 * * 0"  # Weekly if enabled
backup_retention_days: 7
backup_method: "tar"  # Simple tar for local dev
backup_storage_type: "local"

# Local monitoring settings
jenkins_monitoring_enabled: true
monitoring_enabled: true

# Monitoring user configuration
monitoring_user: "monitoring"
monitoring_group: "monitoring"
monitoring_uid: 1004
monitoring_gid: 1004
monitoring_home_dir: "/opt/monitoring"

# Monitoring service configuration
prometheus_enabled: true
prometheus_port: 9090
prometheus_version: "latest"
prometheus_data_retention: "15d"
prometheus_scrape_interval: "30s"
prometheus_evaluation_interval: "30s"

grafana_enabled: true
grafana_port: 3000
grafana_version: "latest"
grafana_admin_user: "admin"
grafana_admin_password: "admin123"
grafana_allow_sign_up: false
grafana_disable_gravatar: true

alertmanager_enabled: false  # Disabled for local dev
alertmanager_port: 9093
alertmanager_version: "latest"

node_exporter_enabled: true
node_exporter_port: 9100
node_exporter_version: "latest"

cadvisor_enabled: true
cadvisor_port: 8080

# Grafana datasource configuration
grafana_prometheus_datasource:
  name: "Prometheus"
  type: "prometheus"
  access: "proxy"
  url: "http://localhost:9090"
  isDefault: true

# Prometheus targets for local development
prometheus_targets:
  - job: "prometheus"
    targets:
      - "localhost:9090"
  - job: "node-exporter"
    targets:
      - "localhost:9100"
  - job: "jenkins"
    targets:
      - "localhost:8080"
      - "localhost:8081"

# Local resource limits (lighter for development)
jenkins_master_memory: "2g"  # Less memory for local dev
jenkins_master_cpu_limit: "1"
jenkins_agents_max: 4

# Local HA settings (enabled for multi-team development)
jenkins_ha_enabled: true
jenkins_cluster_size: 1
jenkins_load_balancer_enabled: true

# Multi-team configuration for HAProxy load balancing (aligned with production)
jenkins_teams:
  - team_name: "devops"
    blue_green_enabled: true
    active_environment: "blue"
    ports:
      web: 8080
      agent: 50000
    resources:
      memory: "2g"
      cpu: "1.0"
    env_vars: {}
    labels:
      tier: "production"
      environment: "local"
      role: "default"
  - team_name: "ma"
    blue_green_enabled: true
    active_environment: "blue"
    ports:
      web: 8081
      agent: 50001
    resources:
      memory: "2g"
      cpu: "1.0"
    env_vars: {}
    labels:
      tier: "production"
      environment: "local"
      role: "marketing-analytics"
  - team_name: "ba"
    blue_green_enabled: true
    active_environment: "blue"
    ports:
      web: 8082
      agent: 50002
    resources:
      memory: "2g"
      cpu: "1.0"
    env_vars: {}
    labels:
      tier: "production"
      environment: "local"
      role: "business-analytics"
  - team_name: "tw"
    blue_green_enabled: true
    active_environment: "blue"
    ports:
      web: 8083
      agent: 50003
    resources:
      memory: "2g"
      cpu: "1.0"
    env_vars: {}
    labels:
      tier: "production"
      environment: "local"
      role: "test-qa"

# HAProxy configuration for local development (corrected structure)
jenkins_domain: "devops.local"
jenkins_wildcard_domain: "*.devops.local"
haproxy_enabled: true
haproxy_stats_enabled: true
haproxy_stats_port: 8404
haproxy_stats_user: "admin"
haproxy_stats_password: "admin123"
keepalived_enabled: false  # Disabled for local dev
jenkins_vip: ""  # No VIP for local dev

# HAProxy DevContainer compatibility settings
# Use Debian-based image to avoid Alpine Linux /proc/sys/net/ipv4/ip_unprivileged_port_start issue
haproxy_image_tag: "2.8"  # Debian-based instead of 2.8-alpine
haproxy_container_runtime: "docker"
haproxy_devcontainer_mode: true

# Local image settings
jenkins_master_image_tag: "latest"
jenkins_agent_image_tag: "latest"
jenkins_images_force_rebuild: false
jenkins_images_push: false  # Don't push to registry in local dev


# Local development-specific plugins (extends defaults)
jenkins_additional_plugins:
  - build-timeout
  - workflow-basic-steps
  - pipeline-stage-view
  - pipeline-graph-analysis
  - ssh-slaves

# Docker configuration for local development
docker_daemon_options:
  log-driver: "json-file"
  log-opts:
    max-size: "10m"
    max-file: "3"
  storage-driver: "overlay2"
  
# Local development paths
local_workspace: "/tmp/jenkins-workspace"
local_user: "{{ ansible_user }}"
local_uid: "{{ ansible_user_uid | default(1000) }}"
local_gid: "{{ ansible_user_gid | default(1000) }}"

# Local development feature flags
build_jenkins_images: false  # Use pre-built images for faster dev
skip_firewall_config: true
skip_selinux_config: true
skip_system_hardening: true

# Monitoring Docker configuration
monitoring_restart_policy: "unless-stopped"
monitoring_docker_network: "{{ monitoring_network_name }}"

# Debugging and development settings
ansible_verbosity: 2
debug_mode: true
development_mode: true

# Local service URLs for easy access
jenkins_local_url: "http://10.5.6.12:8080"
grafana_local_url: "http://10.5.6.12:3000"
prometheus_local_url: "http://10.5.6.12:9090"

# Quick start settings
quick_start_mode: true
skip_bootstrap: false
skip_verification: false