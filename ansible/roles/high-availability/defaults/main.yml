---
# Default variables for high-availability role

# HA Configuration
ha_enabled: true
jenkins_ha_enabled: true
jenkins_ha_mode: "active-passive"  # active-passive or active-active
jenkins_master_count: 2

# Multi-Team Configuration
jenkins_domain: "devops.example.com"
jenkins_wildcard_domain: "*.devops.example.com"
jenkins_default_subdomain: "jenkins"
team_routing_enabled: true

# Load Balancer Configuration (HAProxy)
haproxy_enabled: true
haproxy_stats_enabled: true
haproxy_stats_port: 8404
haproxy_stats_uri: "/stats"
haproxy_stats_user: "admin"
haproxy_stats_password: "{{ vault_haproxy_stats_password | default('changeme') }}"
haproxy_check_interval: "5s"
haproxy_check_fall: 3
haproxy_check_rise: 2
haproxy_timeout_connect: "5s"
haproxy_timeout_client: "300s"
haproxy_timeout_server: "300s"
haproxy_maxconn: 8192

# Virtual IP Configuration (keepalived)
keepalived_enabled: false
jenkins_vip: ""  # Set this to enable VIP
vip_address: "{{ jenkins_vip if jenkins_vip != '' else '*' }}"  # Bind address for HAProxy
jenkins_port: "{{ jenkins_master_port | default(80) }}"  # Port for HTTP frontend
# jenkins_domain defined above
keepalived_interface: "{{ ansible_default_ipv4.interface }}"
keepalived_priority: 100  # Higher number = higher priority
keepalived_vrid: 51
keepalived_advert_int: 1
keepalived_auth_pass: "changeme"

# Health Check Configuration
health_check_enabled: true
health_check_interval: 30
health_check_timeout: 10
health_check_retries: 3
health_check_path: "/login"

# Failover Configuration
failover_enabled: true
failover_timeout: 60
failover_max_attempts: 3
failover_notification_enabled: false

# SSL Configuration for Wildcard Domain
ssl_enabled: true
ssl_certificate_path: "/usr/local/etc/haproxy/ssl/combined.pem"  # Path inside container
ssl_cert_path: "/etc/ssl/certs/wildcard.devops.example.com.pem"
ssl_key_path: "/etc/ssl/private/wildcard.devops.example.com.key"
ssl_ca_cert_path: "/etc/ssl/certs/ca-chain.pem"
ssl_redirect_http: true
ssl_protocols: "TLSv1.2 TLSv1.3"
ssl_ciphers: "ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS"

# Backend Server Configuration
backend_check_enabled: true
backend_check_interval: "5s"
backend_check_timeout: "10s"
backend_max_connections: 100
backend_balance_method: "roundrobin"  # roundrobin, leastconn, source

# Monitoring Configuration
monitoring_enabled: true
monitoring_interval: 120  # seconds
monitoring_log_file: "/var/log/jenkins-ha-monitor.log"
monitoring_alert_enabled: false
monitoring_alert_threshold: 3

# HAProxy Container Configuration (matching jenkins-master pattern)
haproxy_container_runtime: "{{ jenkins_container_runtime | default('docker') }}"
haproxy_restart_policy: "unless-stopped"
haproxy_startup_wait_time: 15

# HAProxy Image Configuration
haproxy_image_registry: "docker.io"
haproxy_image_name: "haproxy"
haproxy_image_tag: "2.8-alpine"

# HAProxy Alternative Images for Container Compatibility
# Use debian-based image for devcontainer environments to avoid Alpine Linux kernel parameter issues
haproxy_image_alternatives:
  devcontainer: "2.8-alpine"
  production: "2.8-alpine"

# HAProxy Network Configuration
haproxy_network_name: "jenkins-network"
haproxy_network_mode: "bridge"  # Use bridge for compatibility with Jenkins containers

# HAProxy Container Resources
haproxy_memory_limit: "512M"
haproxy_cpu_limit: "0.5"
haproxy_memory_reservation: "256M"
haproxy_cpu_reservation: "0.25"

# HAProxy Logging Configuration
haproxy_log_driver: "json-file"
haproxy_log_max_size: "10m"
haproxy_log_max_files: "3"

# HAProxy Container Environment Variables
haproxy_env_vars:
  TZ: "{{ common_timezone | default('UTC') }}"

# HAProxy Container Labels
haproxy_labels:
  service: "haproxy"
  managed_by: "ansible"
  role: "load-balancer"
  jenkins_service: "true"

# HAProxy Container User/Group
haproxy_user: "haproxy"
haproxy_group: "haproxy"  # Group name matches user for simplicity
haproxy_uid: 1005  # Unique UID avoiding conflicts: local(1000), monitoring(1004), others(1001-1003)
haproxy_gid: 1005
