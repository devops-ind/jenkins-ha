---
# Jenkins Images Manifest
# Generated on {{ ansible_date_time.iso8601 }}
# Build Environment: {{ ansible_hostname }}

build_info:
  timestamp: "{{ ansible_date_time.iso8601 }}"
  ansible_hostname: "{{ ansible_hostname }}"
  build_user: "{{ ansible_user_id }}"
  git_commit: "{{ lookup('env', 'GIT_COMMIT') | default('unknown') }}"
  jenkins_version: "{{ jenkins_version }}"

registry_info:
  url: "{{ harbor_registry_url }}"
  project: "{{ harbor_project }}"
  push_enabled: {{ jenkins_images_push | default(true) }}

images:
{% for image in images_built %}
  - name: "{{ image.name }}"
    full_name: "{{ harbor_registry_url }}/{{ harbor_project }}/{{ image.name }}"
    tag: "{{ image.tag }}"
    digest: "{{ image.digest }}"
    build_date: "{{ ansible_date_time.iso8601 }}"
    {% if image.name == 'jenkins-master' %}
    description: "Custom Jenkins Master with HA configuration"
    base_image: "jenkins/jenkins:{{ jenkins_version }}"
    capabilities:
      - "Jenkins LTS {{ jenkins_version }}"
      - "Docker CLI integration"
      - "Pre-installed plugins"
      - "Configuration as Code"
      - "HA-ready configuration"
    {% elif image.name == 'jenkins-agent-dind' %}
    description: "Jenkins Agent with Docker-in-Docker capabilities"
    base_image: "jenkins/inbound-agent:{{ jenkins_agent_version | default('latest') }}"
    capabilities:
      - "Docker Engine"
      - "Docker Compose"
      - "Build tools"
      - "Container orchestration"
    {% elif image.name == 'jenkins-agent-maven' %}
    description: "Jenkins Agent with Maven and Java build tools"
    base_image: "openjdk:{{ default_jdk_version | default('11') }}-jdk"
    capabilities:
      - "OpenJDK {{ default_jdk_version | default('11') }}"
      - "Apache Maven {{ maven_version | default('3.9.6') }}"
      - "Docker CLI"
      - "Build essentials"
    {% elif image.name == 'jenkins-agent-python' %}
    description: "Jenkins Agent with Python development environment"
    base_image: "python:{{ python_version | default('3.11') }}"
    capabilities:
      - "Python {{ python_version | default('3.11') }}"
      - "pip, pytest, black, flake8"
      - "Virtual environments"
      - "Common Python packages"
    {% elif image.name == 'jenkins-agent-nodejs' %}
    description: "Jenkins Agent with Node.js development environment"
    base_image: "node:{{ nodejs_version | default('18') }}"
    capabilities:
      - "Node.js {{ nodejs_version | default('18') }}"
      - "npm, yarn, pnpm"
      - "Angular CLI, Vue CLI, React"
      - "Testing frameworks"
    {% endif %}
{% endfor %}

deployment_targets:
  {% if jenkins_ha_enabled | default(false) %}
  - environment: "ha-cluster"
    nodes: {{ groups['jenkins_masters'] | length if groups['jenkins_masters'] is defined else 1 }}
  {% endif %}
  {% if groups['jenkins_agents'] is defined %}
  - environment: "agent-pool"
    nodes: {{ groups['jenkins_agents'] | length }}
  {% endif %}

security:
  base_images_verified: true
  vulnerability_scanning: {{ security_scanning_enabled | default(false) }}
  signed_images: {{ image_signing_enabled | default(false) }}

maintenance:
  cleanup_policy: "keep-last-3-versions"
  auto_cleanup: {{ jenkins_images_cleanup | default(true) }}
  retention_period: "72h"

# Usage instructions
usage:
  pull_command: "docker pull {{ harbor_registry_url }}/{{ harbor_project }}/IMAGE_NAME:TAG"
  run_examples:
    master: "docker run -d -p 8080:8080 -p 50000:50000 {{ harbor_registry_url }}/{{ harbor_project }}/jenkins-master:{{ jenkins_master_image_tag }}"
    dind_agent: "docker run --privileged -d {{ harbor_registry_url }}/{{ harbor_project }}/jenkins-agent-dind:{{ jenkins_agent_image_tag }}"
    maven_agent: "docker run -d {{ harbor_registry_url }}/{{ harbor_project }}/jenkins-agent-maven:{{ jenkins_agent_image_tag }}"
    python_agent: "docker run -d {{ harbor_registry_url }}/{{ harbor_project }}/jenkins-agent-python:{{ jenkins_agent_image_tag }}"
    nodejs_agent: "docker run -d {{ harbor_registry_url }}/{{ harbor_project }}/jenkins-agent-nodejs:{{ jenkins_agent_image_tag }}"