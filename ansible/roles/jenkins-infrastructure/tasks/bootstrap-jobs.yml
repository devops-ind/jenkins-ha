---
# Bootstrap Jenkins Configuration as Code (JCasC)
# Deploys Jenkins configuration and jobs using JCasC YAML files

- name: Create JCasC configuration directory
  file:
    path: "{{ jenkins_home_dir }}/casc_configs"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0755'

- name: Generate Jenkins JCasC main configuration
  template:
    src: jcasc/jenkins-config.yml.j2
    dest: "{{ jenkins_home_dir }}/casc_configs/jenkins-config.yml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0644'
  notify: restart jenkins

- name: Generate Jenkins JCasC jobs configuration
  template:
    src: jcasc/jenkins-jobs.yml.j2
    dest: "{{ jenkins_home_dir }}/casc_configs/jenkins-jobs.yml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0644'
  notify: restart jenkins

- name: Set CASC_JENKINS_CONFIG environment variable
  lineinfile:
    path: "{{ jenkins_home_dir }}/.bashrc"
    line: "export CASC_JENKINS_CONFIG={{ jenkins_home_dir }}/casc_configs"
    create: yes
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0644'

- name: Create JCasC environment file for systemd
  template:
    src: jenkins-environment.j2
    dest: "/etc/default/jenkins-{{ ansible_hostname }}"
    mode: '0644'
  notify: restart jenkins

- name: Update Jenkins systemd service to include JCasC configuration
  template:
    src: jenkins-master.service.j2
    dest: "/etc/systemd/system/jenkins-master-{{ ansible_hostname }}.service"
    mode: '0644'
  notify:
    - reload systemd
    - restart jenkins

- name: Wait for Jenkins to be fully ready with JCasC
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/api/json"
    method: GET
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    timeout: 10
  register: jenkins_api_ready
  until: jenkins_api_ready is succeeded
  retries: 30
  delay: 10

- name: Verify JCasC configuration is loaded
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/configuration-as-code/"
    method: GET
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    timeout: 10
  register: jcasc_status
  until: jcasc_status is succeeded
  retries: 10
  delay: 5

- name: Trigger JCasC configuration reload if needed
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/configuration-as-code/reload"
    method: POST
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    force_basic_auth: yes
    status_code: [200, 302]
  when: jenkins_force_casc_reload | default(false)

- name: Display JCasC bootstrap information
  debug:
    msg: |
      ü§ñ Jenkins Configuration as Code (JCasC) Bootstrap Complete!
      
      üìã Infrastructure Jobs (Auto-created via JCasC):
      ‚Ä¢ Infrastructure/Image-Builder - Builds and pushes Jenkins images to Harbor
      ‚Ä¢ Infrastructure/Backup-Pipeline - Automated backup operations and verification
      ‚Ä¢ Infrastructure/Infrastructure-Update - Self-updating Jenkins infrastructure
      ‚Ä¢ Infrastructure/Health-Check - Monitors Jenkins and infrastructure health
      ‚Ä¢ Infrastructure/Security-Scan - Security scanning and compliance checks
      ‚Ä¢ Infrastructure/Monitoring-Setup - Monitoring stack management
      
      üìÅ JCasC Configuration:
      ‚Ä¢ Main Config: {{ jenkins_home_dir }}/casc_configs/jenkins-config.yml
      ‚Ä¢ Jobs Config: {{ jenkins_home_dir }}/casc_configs/jenkins-jobs.yml
      ‚Ä¢ Environment: CASC_JENKINS_CONFIG={{ jenkins_home_dir }}/casc_configs
      
      ‚è∞ Automatic Scheduling (via JCasC):
      ‚Ä¢ Health checks run every 15 minutes
      ‚Ä¢ Security scans run weekly on Monday at 3 AM
      ‚Ä¢ Backups run according to configured schedule
      ‚Ä¢ Image building runs weekly on Sunday at 1 AM
      
      üîß Management:
      ‚Ä¢ JCasC Web UI: http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/configuration-as-code/
      ‚Ä¢ Reload Config: http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/configuration-as-code/reload
      
      üéØ Access:
      Infrastructure Jobs: http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/job/Infrastructure/