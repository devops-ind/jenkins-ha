#!/bin/bash
# Jenkins Blue-Green Deployment Manager
# Main management interface for blue-green operations
# Generated by Ansible - Blue-Green Deployment

set -euo pipefail

# Configuration
JENKINS_HOME="{{ jenkins_home_dir }}"
SCRIPTS_DIR="$JENKINS_HOME/blue-green/scripts"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Version information
VERSION="1.0.0"
BUILD_DATE="{{ ansible_date_time.iso8601 }}"

# Display banner
show_banner() {
    echo -e "${CYAN}╔══════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${CYAN}║              Jenkins Blue-Green Deployment Manager           ║${NC}"
    echo -e "${CYAN}║                        Version $VERSION                          ║${NC}"
    echo -e "${CYAN}╚══════════════════════════════════════════════════════════════╝${NC}"
    echo ""
}

# Show status
show_status() {
    echo -e "${BLUE}Executing health check and status...${NC}"
    echo ""
    "$SCRIPTS_DIR/health-check.sh" quick
    echo ""
    "$SCRIPTS_DIR/switch-environment.sh" status
}

# Switch environments
switch_environment() {
    echo -e "${YELLOW}Initiating environment switch...${NC}"
    echo ""
    "$SCRIPTS_DIR/switch-environment.sh" switch
}

# Perform health check
health_check() {
    local mode="${1:-detailed}"
    echo -e "${GREEN}Performing health check...${NC}"
    echo ""
    "$SCRIPTS_DIR/health-check.sh" "$mode"
}

# Rollback to previous environment
rollback() {
    echo -e "${RED}Initiating rollback...${NC}"
    echo ""
    read -p "Are you sure you want to rollback to the previous environment? (yes/no): " confirm
    if [[ "$confirm" == "yes" ]]; then
        "$SCRIPTS_DIR/rollback.sh"
    else
        echo "Rollback cancelled."
    fi
}

# Create backup
create_backup() {
    local reason="${1:-Manual backup via manager}"
    echo -e "${CYAN}Creating backup...${NC}"
    echo ""
    "$SCRIPTS_DIR/backup.sh" "$reason"
}

# Show logs
show_logs() {
    local log_type="${1:-switch}"
    local log_file="$JENKINS_HOME/blue-green/logs/${log_type}.log"
    
    if [[ -f "$log_file" ]]; then
        echo -e "${BLUE}Recent ${log_type} logs:${NC}"
        echo ""
        tail -20 "$log_file"
    else
        echo -e "${YELLOW}No ${log_type} logs found.${NC}"
    fi
}

# Show configuration
show_config() {
    echo -e "${CYAN}=== Jenkins Blue-Green Configuration ===${NC}"
    echo ""
    echo "Deployment Mode: blue-green"
    echo "Container Runtime: {{ jenkins_container_runtime }}"
    echo "Blue Container: {{ jenkins_blue_container_name }}"
    echo "Green Container: {{ jenkins_green_container_name }}"
    echo "Blue Port: {{ jenkins_blue_port }}"
    echo "Green Port: {{ jenkins_green_port }}"
    echo "Load Balancer VIP: {{ jenkins_vip | default(ansible_default_ipv4.address) }}"
    echo "Jenkins Home: {{ jenkins_home_dir }}"
    echo "Shared Storage: {{ shared_storage_path | default('/shared/jenkins') }}"
    echo ""
    echo "Health Check Settings:"
    echo "  Retries: {{ jenkins_blue_green_health_check_retries }}"
    echo "  Delay: {{ jenkins_blue_green_health_check_delay }}s"
    echo "  Timeout: {{ jenkins_blue_green_switch_timeout }}s"
    echo ""
    echo "Automation Settings:"
    echo "  Auto Rollback: {{ jenkins_auto_rollback_enabled | default(true) | lower }}"
    echo "  Pre-deployment Backup: {{ jenkins_pre_deployment_backup | default(true) | lower }}"
    echo "  Post-deployment Verification: {{ jenkins_post_deployment_verification | default(true) | lower }}"
}

# Interactive menu
interactive_menu() {
    while true; do
        show_banner
        echo -e "${BLUE}Select an operation:${NC}"
        echo ""
        echo "1) Show Status & Health"
        echo "2) Switch Environment (Blue ↔ Green)"
        echo "3) Detailed Health Check"
        echo "4) Create Backup"
        echo "5) Rollback to Previous"
        echo "6) View Recent Logs"
        echo "7) Show Configuration"
        echo "8) Exit"
        echo ""
        read -p "Enter your choice (1-8): " choice
        echo ""
        
        case $choice in
            1)
                show_status
                ;;
            2)
                switch_environment
                ;;
            3)
                health_check detailed
                ;;
            4)
                create_backup "Interactive backup"
                ;;
            5)
                rollback
                ;;
            6)
                echo "Available logs: switch, health-check, rollback, backup"
                read -p "Enter log type (default: switch): " log_type
                show_logs "${log_type:-switch}"
                ;;
            7)
                show_config
                ;;
            8)
                echo -e "${GREEN}Goodbye!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}Invalid choice. Please try again.${NC}"
                ;;
        esac
        
        echo ""
        read -p "Press Enter to continue..."
    done
}

# Usage information
usage() {
    cat << EOF
Jenkins Blue-Green Deployment Manager v$VERSION

Usage: $0 [COMMAND] [OPTIONS]

Commands:
  status                   Show deployment status and health summary
  switch                   Switch between blue and green environments
  health [quick|detailed]  Perform health check (default: detailed)
  rollback                 Rollback to previous environment
  backup [reason]          Create backup with optional reason
  logs [type]              Show recent logs (switch|health-check|rollback|backup)
  config                   Show current configuration
  interactive              Launch interactive menu
  version                  Show version information

Options:
  -h, --help              Show this help message

Examples:
  $0 status                      # Show status
  $0 switch                      # Switch environments
  $0 health quick                # Quick health check
  $0 backup "Pre-upgrade"        # Create backup with reason
  $0 logs switch                 # Show switch logs
  $0 interactive                 # Launch interactive mode

Environment Variables:
  JENKINS_BG_AUTO_CONFIRM=yes   # Skip confirmation prompts
  JENKINS_BG_LOG_LEVEL=debug    # Enable debug logging

Files:
  Configuration: $JENKINS_HOME/blue-green/scripts/config.sh
  State File: $JENKINS_HOME/blue-green/state.json
  Logs: $JENKINS_HOME/blue-green/logs/

For more information, see the Jenkins Blue-Green deployment documentation.
EOF
}

# Version information
show_version() {
    echo "Jenkins Blue-Green Deployment Manager"
    echo "Version: $VERSION"
    echo "Build Date: $BUILD_DATE"
    echo "Ansible Generated: {{ ansible_date_time.iso8601 }}"
}

# Main script logic
main() {
    case "${1:-interactive}" in
        status)
            show_status
            ;;
        switch)
            switch_environment
            ;;
        health)
            health_check "${2:-detailed}"
            ;;
        rollback)
            rollback
            ;;
        backup)
            create_backup "${2:-Manual backup via manager}"
            ;;
        logs)
            show_logs "${2:-switch}"
            ;;
        config)
            show_config
            ;;
        interactive|menu)
            interactive_menu
            ;;
        version|-v|--version)
            show_version
            ;;
        help|-h|--help)
            usage
            ;;
        *)
            if [[ "${1:-}" != "" ]]; then
                echo -e "${RED}Error: Unknown command '${1}'${NC}"
                echo ""
            fi
            show_banner
            echo -e "${BLUE}No command specified. Launching interactive mode...${NC}"
            echo ""
            sleep 2
            interactive_menu
            ;;
    esac
}

# Check if scripts exist
if [[ ! -d "$SCRIPTS_DIR" ]]; then
    echo -e "${RED}Error: Blue-Green scripts directory not found: $SCRIPTS_DIR${NC}"
    exit 1
fi

# Source configuration if available
if [[ -f "$SCRIPTS_DIR/config.sh" ]]; then
    source "$SCRIPTS_DIR/config.sh"
fi

# Run main function
main "$@"