#!/bin/bash
# Jenkins Blue-Green Post-Switch Hook
# Executed after successful environment switching
# Generated by Ansible

set -euo pipefail

# Source configuration
JENKINS_HOME="{{ jenkins_home_dir }}"
source "$JENKINS_HOME/blue-green/scripts/config.sh"

# Post-switch hook execution
echo "=== Jenkins Blue-Green Post-Switch Hook ==="
echo "Timestamp: $(date -Iseconds)"
echo "Previous Environment: ${1:-unknown}"
echo "Current Environment: ${2:-unknown}"
echo ""

# Post-switch operations and notifications
# Customize this section based on your requirements

# 1. Verify new active environment
echo "Verifying new active environment..."
current_env="${2:-green}"
if [[ "$current_env" == "blue" ]]; then
    active_url="http://localhost:$JENKINS_BLUE_PORT$JENKINS_CONTEXT_PATH/api/json"
else
    active_url="http://localhost:$JENKINS_GREEN_PORT$JENKINS_CONTEXT_PATH/api/json"
fi

if curl -sf "$active_url" >/dev/null; then
    log_success "New active environment is responding"
else
    log_error "New active environment is not responding"
    exit 1
fi

# 2. Check load balancer routing
echo "Verifying load balancer routing..."
lb_url="http://$JENKINS_VIP:$JENKINS_MASTER_PORT$JENKINS_CONTEXT_PATH/api/json"
if curl -sf "$lb_url" >/dev/null; then
    log_success "Load balancer is routing traffic correctly"
else
    log_warning "Load balancer verification failed"
fi

# 3. Update environment status
echo "Updating environment status..."
jenkins_version=$(curl -sf "$active_url" | jq -r '.version // "unknown"' 2>/dev/null || echo "unknown")
log_info "Active environment Jenkins version: $jenkins_version"

# 4. Clean up previous environment (optional)
echo "Performing post-switch cleanup..."
previous_env="${1:-blue}"

# Optional: Scale down previous environment or perform cleanup
# This is environment-specific and should be customized

# 5. Update monitoring and metrics
echo "Updating monitoring metrics..."
# Example: Update Prometheus metrics or send to monitoring system
# This would integrate with your specific monitoring setup

# 6. Create post-switch report
echo "Creating post-switch report..."
cat > "$JENKINS_BG_LOGS_DIR/post-switch-$(date +%s).log" << EOF
Post-Switch Hook Execution Report
=================================
Timestamp: $(date -Iseconds)
Previous Environment: ${1:-unknown}
Current Environment: ${2:-unknown}
Jenkins Version: $jenkins_version
Load Balancer Status: $(curl -sf "$lb_url" >/dev/null && echo "OK" || echo "FAILED")
Switch Duration: ${3:-unknown}s

Post-switch operations completed successfully.
EOF

# 7. Send notifications
echo "Sending post-switch notifications..."

# Example: Slack notification
# if [[ -n "${SLACK_WEBHOOK_URL:-}" ]]; then
#     curl -X POST "$SLACK_WEBHOOK_URL" \
#         -H "Content-Type: application/json" \
#         -d "{\"text\":\"Jenkins Blue-Green Switch Completed: ${1:-unknown} â†’ ${2:-unknown} (${3:-unknown}s)\"}"
# fi

# Example: Email notification
# if [[ -n "${NOTIFICATION_EMAIL:-}" ]]; then
#     echo "Jenkins environment switched from ${1:-unknown} to ${2:-unknown}" | \
#         mail -s "Jenkins Blue-Green Deployment - Switch Completed" "$NOTIFICATION_EMAIL"
# fi

# Example: Webhook notification
# if [[ -n "${JENKINS_WEBHOOK_URL:-}" ]]; then
#     curl -X POST "$JENKINS_WEBHOOK_URL" \
#         -H "Content-Type: application/json" \
#         -d "{\"event\":\"post-switch\",\"previous\":\"${1:-unknown}\",\"current\":\"${2:-unknown}\",\"duration\":\"${3:-unknown}\",\"timestamp\":\"$(date -Iseconds)\"}"
# fi

# 8. Update DNS or service discovery (if applicable)
echo "Updating service discovery..."
# Example: Update Consul, etcd, or other service discovery
# This would be specific to your infrastructure

# 9. Trigger downstream deployments (if applicable)
echo "Checking for downstream deployments..."
# Example: Trigger deployments that depend on Jenkins
# This could involve updating Kubernetes deployments, etc.

# 10. Archive old logs and cleanup
echo "Performing log cleanup..."
find "$JENKINS_BG_LOGS_DIR" -name "*.log" -mtime +7 -type f -delete 2>/dev/null || true

log_success "Post-switch hook completed successfully"
log_info "Active environment: ${2:-unknown}"
log_info "Jenkins version: $jenkins_version"
log_info "Load balancer URL: http://$JENKINS_VIP:$JENKINS_MASTER_PORT$JENKINS_CONTEXT_PATH"
echo ""

exit 0