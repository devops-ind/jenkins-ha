# HAProxy Main Configuration - Jenkins Blue-Green Multi-Team
# Generated by Ansible for {{ ansible_hostname }}

# Global configuration
global
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL/TLS configuration
    {% if jenkins_ssl_enabled | default(false) %}
    ssl-default-bind-ciphers ECDHE+RSA+AES128+GCM+SHA256:ECDHE+RSA+AES128+SHA256:ECDHE+RSA+AES256+SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE+RSA+AES128+GCM+SHA256:ECDHE+RSA+AES128+SHA256:ECDHE+RSA+AES256+SHA384
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets
    {% endif %}

    # Performance tuning
    maxconn 4096
    nbthread {{ ansible_processor_vcpus | default(2) }}

# Default configuration
defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    
    # Timeouts
    timeout connect 10s
    timeout client 60s
    timeout server 60s
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout check 10s
    timeout tunnel 1h
    
    # Error pages
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Statistics interface
listen stats
    bind *:8404
    mode http
    stats enable
    stats hide-version
    stats realm HAProxy\ Statistics\ -\ Jenkins\ Blue-Green
    stats uri /
    stats refresh 10s
    stats admin if TRUE
    stats show-legends
    
    # Custom stats page styling
    stats html-file /etc/haproxy/stats.html
    
    # Restrict access to local network
    acl local_network src 127.0.0.1 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    http-request deny unless local_network

# Blue-Green Management API
listen blue_green_api
    bind *:8405
    mode http
    
    # Restrict to admin network
    acl admin_network src {{ admin_network_cidr | default('127.0.0.1/32') }}
    http-request deny unless admin_network
    
    # API endpoints for blue-green management
    http-request return status 200 content-type "application/json" string "{\"status\":\"ok\",\"teams\":[{% for team in jenkins_teams %}\"{{ team.name }}\"{% if not loop.last %},{% endif %}{% endfor %}]}" if { path_exact /api/teams }
    
    {% for team in jenkins_teams %}
    # {{ team.name | upper }} team endpoints
    http-request return status 200 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"active_environment\":\"{{ team.active_environment }}\",\"port\":{{ team.port }},\"agent_port\":{{ team.agent_port }}}" if { path_exact /api/{{ team.name }}/status }
    
    # Switch endpoints (these would trigger external scripts)
    http-request return status 202 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"action\":\"switching_to_blue\",\"message\":\"Switch initiated\"}" if { path_exact /api/{{ team.name }}/switch/blue }
    http-request return status 202 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"action\":\"switching_to_green\",\"message\":\"Switch initiated\"}" if { path_exact /api/{{ team.name }}/switch/green }
    {% endfor %}
    
    # Default response
    http-request return status 404 content-type "application/json" string "{\"error\":\"endpoint_not_found\"}"

{% for team in jenkins_teams %}
# ============================================================================
# {{ team.name | upper }} TEAM CONFIGURATION
# ============================================================================

# Blue environment backend for {{ team.name }}
backend jenkins_{{ team.name }}_blue
    mode http
    balance roundrobin
    option httpchk GET /login HTTP/1.1\r\nHost:\ localhost
    http-check expect status 200
    
    # Server definition
    {% if team.active_environment == 'blue' %}
    server jenkins-{{ team.name }}-blue 127.0.0.1:{{ team.port }} check inter 10s fastinter 2s downinter 2s rise 2 fall 2
    {% else %}
    server jenkins-{{ team.name }}-blue 127.0.0.1:8080 check inter 30s fastinter 5s downinter 5s rise 2 fall 3 backup disabled
    {% endif %}
    
    # Request/response modifications
    http-request add-header X-Jenkins-Team "{{ team.name }}"
    http-request add-header X-Jenkins-Environment "blue"
    http-response add-header X-Jenkins-Team "{{ team.name }}"
    http-response add-header X-Jenkins-Environment "blue"

# Green environment backend for {{ team.name }}
backend jenkins_{{ team.name }}_green
    mode http
    balance roundrobin
    option httpchk GET /login HTTP/1.1\r\nHost:\ localhost
    http-check expect status 200
    
    # Server definition
    {% if team.active_environment == 'green' %}
    server jenkins-{{ team.name }}-green 127.0.0.1:{{ team.port }} check inter 10s fastinter 2s downinter 2s rise 2 fall 2
    {% else %}
    server jenkins-{{ team.name }}-green 127.0.0.1:8080 check inter 30s fastinter 5s downinter 5s rise 2 fall 3 backup disabled
    {% endif %}
    
    # Request/response modifications
    http-request add-header X-Jenkins-Team "{{ team.name }}"
    http-request add-header X-Jenkins-Environment "green"
    http-response add-header X-Jenkins-Team "{{ team.name }}"
    http-response add-header X-Jenkins-Environment "green"

# Active backend for {{ team.name }} (points to current active environment)
backend jenkins_{{ team.name }}_active
    mode http
    option httpchk GET /api/json HTTP/1.1\r\nHost:\ localhost
    http-check expect status 200,403
    
    {% if team.active_environment == 'blue' %}
    # Blue is active
    server jenkins-{{ team.name }}-active 127.0.0.1:{{ team.port }} check inter 5s fastinter 2s downinter 2s rise 2 fall 2
    {% else %}
    # Green is active  
    server jenkins-{{ team.name }}-active 127.0.0.1:{{ team.port }} check inter 5s fastinter 2s downinter 2s rise 2 fall 2
    {% endif %}
    
    # Jenkins-specific settings
    option forwardfor
    option http-server-close
    
    # Request modifications for Jenkins
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request add-header X-Forwarded-Proto http if !{ ssl_fc }
    http-request add-header X-Jenkins-Team "{{ team.name }}"
    http-request add-header X-Jenkins-Environment "{{ team.active_environment }}"
    
    # Response modifications
    http-response add-header X-Jenkins-Team "{{ team.name }}"
    http-response add-header X-Jenkins-Environment "{{ team.active_environment }}"
    
    # Security headers
    http-response add-header X-Frame-Options SAMEORIGIN
    http-response add-header X-Content-Type-Options nosniff
    http-response add-header X-XSS-Protection "1; mode=block"
    {% if jenkins_ssl_enabled | default(false) %}
    http-response add-header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload"
    {% endif %}

# Main frontend for Jenkins {{ team.name }}
frontend jenkins_{{ team.name }}_frontend
    bind *:{{ team.port }}
    {% if jenkins_ssl_enabled | default(false) %}
    bind *:{{ team.port | int + 8443 }} ssl crt {{ jenkins_ssl_cert_path | default('/etc/ssl/certs/jenkins.pem') }}
    {% endif %}
    
    mode http
    option httplog
    option http-buffer-request
    
    # Capture custom headers for logging
    capture request header User-Agent len 64
    capture request header X-Forwarded-For len 64
    capture request header Referer len 128
    
    # ACLs for different request types
    acl is_websocket hdr(Upgrade) -i websocket
    acl is_jenkins_cli path_beg /cli
    acl is_jenkins_agent path_beg /computer/
    acl is_jenkins_build_logs path_beg /job/ path_end /console /consoleText /logText
    acl is_static_resource path_end .css .js .png .jpg .jpeg .gif .ico .svg .woff .woff2 .eot .ttf
    acl is_api_request path_beg /api/
    acl is_blue_green_api path_beg /blue-green/
    acl is_health_check path_beg /health/
    
    # Security ACLs
    acl local_network src 127.0.0.1 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    acl admin_network src {{ admin_network_cidr | default('127.0.0.1/32') }}
    
    # Rate limiting (per IP)
    stick-table type ip size 100k expire 30s store http_req_rate(10s),http_err_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 50 } !admin_network
    http-request deny if { sc_http_err_rate(0) gt 10 } !admin_network
    
    # Blue-green API access control
    http-request deny if is_blue_green_api !admin_network
    
    # Health check endpoints (internal routing)
    use_backend jenkins_{{ team.name }}_blue if is_health_check path_reg ^/health/{{ team.name }}/blue
    use_backend jenkins_{{ team.name }}_green if is_health_check path_reg ^/health/{{ team.name }}/green
    
    # Blue-green switching endpoints
    http-request return status 202 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"action\":\"switching_to_blue\"}" if { path /blue-green/switch/blue } admin_network
    http-request return status 202 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"action\":\"switching_to_green\"}" if { path /blue-green/switch/green } admin_network
    http-request return status 200 content-type "application/json" string "{\"team\":\"{{ team.name }}\",\"active\":\"{{ team.active_environment }}\"}" if { path /blue-green/status } local_network
    
    {% if jenkins_ssl_enabled | default(false) %}
    # HTTPS redirect (except for health checks and API)
    redirect scheme https code 301 if !{ ssl_fc } !is_health_check !is_blue_green_api !is_api_request
    {% endif %}
    
    # Special handling for WebSocket connections
    timeout client 1h if is_websocket
    timeout server 1h if is_websocket
    
    # Default backend routing
    default_backend jenkins_{{ team.name }}_active

# Agent connection frontend (JNLP port) for {{ team.name }}
frontend jenkins_{{ team.name }}_agent_frontend
    bind *:{{ team.agent_port }}
    mode tcp
    option tcplog
    
    # TCP connection handling
    timeout client 1h
    timeout server 1h
    
    # Simple load balancing to active environment
    default_backend jenkins_{{ team.name }}_agent_backend

# Agent connection backend for {{ team.name }}
backend jenkins_{{ team.name }}_agent_backend
    mode tcp
    balance source
    option tcp-check
    
    # Connection persistence for Jenkins agents
    stick-table type ip size 1k expire 30m
    stick on src
    
    {% if team.active_environment == 'blue' %}
    server jenkins-{{ team.name }}-agent-active 127.0.0.1:{{ team.agent_port }} check port {{ team.agent_port }}
    {% else %}
    server jenkins-{{ team.name }}-agent-active 127.0.0.1:{{ team.agent_port }} check port {{ team.agent_port }}
    {% endif %}

{% endfor %}

# Include additional configuration files
{% if haproxy_include_configs | default(true) %}
# Include team-specific configuration files from conf.d directory
# (These files are created by the Ansible tasks)
{% endif %}