#!/bin/bash

# Jenkins Blue-Green Multi-Team Pre-start Script
# Generated by Ansible

set -e

CONTAINER_RUNTIME="{{ jenkins_container_runtime }}"
LOG_FILE="{{ jenkins_home_dir }}/logs/prestart.log"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

mkdir -p "$(dirname "$LOG_FILE")"

log_message "üöÄ Jenkins Blue-Green Multi-Team pre-start checks..."

# Check container runtime connectivity
if [ "$CONTAINER_RUNTIME" = "docker" ]; then
    if ! docker info > /dev/null 2>&1; then
        log_message "‚ùå Docker is not accessible"
        exit 1
    fi
    log_message "‚úÖ Docker connectivity: OK"
else
    if ! podman info > /dev/null 2>&1; then
        log_message "‚ùå Podman is not accessible"
        exit 1
    fi
    log_message "‚úÖ Podman connectivity: OK"
fi

# Check Jenkins home directory
if [ ! -d "{{ jenkins_home_dir }}" ]; then
    log_message "‚ùå Jenkins home directory not found: {{ jenkins_home_dir }}"
    exit 1
fi
log_message "‚úÖ Jenkins home directory: OK"

# Check container network
if [ "$CONTAINER_RUNTIME" = "docker" ]; then
    if ! docker network inspect {{ jenkins_network_name }} > /dev/null 2>&1; then
        log_message "üìù Creating Jenkins network..."
        docker network create --driver bridge {{ jenkins_network_name }}
    fi
else
    if ! podman network inspect {{ jenkins_network_name }} > /dev/null 2>&1; then
        log_message "üìù Creating Jenkins network..."
        podman network create {{ jenkins_network_name }}
    fi
fi
log_message "‚úÖ Jenkins network: OK"

# Verify team containers status
{% for team in jenkins_teams %}
log_message "üîç Checking team: {{ team.name }}"

# Check blue environment container
BLUE_CONTAINER="jenkins-{{ team.name }}-blue"
if [ "$CONTAINER_RUNTIME" = "docker" ]; then
    BLUE_STATUS=$(docker inspect "$BLUE_CONTAINER" --format='{{ '{{.State.Status}}' }}' 2>/dev/null || echo "not_found")
else
    BLUE_STATUS=$(podman inspect "$BLUE_CONTAINER" --format='{{ '{{.State.Status}}' }}' 2>/dev/null || echo "not_found")
fi

# Check green environment container  
GREEN_CONTAINER="jenkins-{{ team.name }}-green"
if [ "$CONTAINER_RUNTIME" = "docker" ]; then
    GREEN_STATUS=$(docker inspect "$GREEN_CONTAINER" --format='{{ '{{.State.Status}}' }}' 2>/dev/null || echo "not_found")
else
    GREEN_STATUS=$(podman inspect "$GREEN_CONTAINER" --format='{{ '{{.State.Status}}' }}' 2>/dev/null || echo "not_found")
fi

log_message "  {{ team.name }}: Blue=$BLUE_STATUS, Green=$GREEN_STATUS, Active={{ team.active_environment }}"

{% if team.active_environment == 'blue' %}
if [ "$BLUE_STATUS" != "running" ]; then
    log_message "‚ö†Ô∏è  {{ team.name }}: Active blue environment not running"
fi
{% else %}
if [ "$GREEN_STATUS" != "running" ]; then
    log_message "‚ö†Ô∏è  {{ team.name }}: Active green environment not running"
fi
{% endif %}
{% endfor %}

log_message "‚úÖ Pre-start checks completed"