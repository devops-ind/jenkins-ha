version: '3.8'

# Jenkins High Availability Docker Compose Configuration
# Managed by Ansible - Do not edit manually

services:
{% for i in range(1, jenkins_master_count + 1) %}
  jenkins-master-{{ i }}:
    image: "{{ harbor_registry_url | default('docker.io') }}/{{ harbor_project | default('jenkins') }}/jenkins:{{ jenkins_master_image_tag | default('lts') }}"
    container_name: jenkins-master-{{ i }}
    hostname: jenkins-master-{{ i }}.{{ jenkins_cluster_name }}
    restart: {{ jenkins_restart_policy }}
    
    # Port Configuration - Each master gets unique ports
    ports:
      - "{{ jenkins_port + i - 1 }}:{{ jenkins_port }}"
      - "{{ jenkins_agent_port + i - 1 }}:{{ jenkins_agent_port }}"
    
    # Volume Mounts
    volumes:
      - jenkins-home-{{ i }}:{{ jenkins_home_dir }}
      - jenkins-shared:{{ shared_storage_path | default('/shared/jenkins') }}
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{ jenkins_home_dir }}/casc:/usr/share/jenkins/ref/casc:ro
    
    # Environment Variables
    environment:
      - JAVA_OPTS={{ jenkins_master_java_opts }}
      - JENKINS_OPTS=--httpPort={{ jenkins_port }} --prefix={{ jenkins_context_path }}
      - CASC_JENKINS_CONFIG=/usr/share/jenkins/ref/casc
      - HARBOR_REGISTRY_URL={{ harbor_registry_url | default('') }}
      - HARBOR_PROJECT_NAME={{ harbor_project | default('jenkins') }}
      - JENKINS_VERSION={{ jenkins_version }}
      - TZ={{ common_timezone | default('UTC') }}
      - JENKINS_SLAVE_AGENT_PORT={{ jenkins_agent_port }}
      - JENKINS_CLUSTER_ID={{ jenkins_cluster_name }}
      - JENKINS_NODE_ID=master-{{ i }}
{% if jenkins_ha_enabled %}
      - JENKINS_HA_MODE={{ jenkins_ha_mode }}
      - JENKINS_HA_MASTERS={{ jenkins_master_count }}
      - JENKINS_HA_VIP={{ jenkins_vip | default('') }}
{% endif %}
    
    # Resource Limits
    deploy:
      resources:
        limits:
          memory: {{ jenkins_master_memory }}
          cpus: '{{ jenkins_master_cpu_limit }}'
        reservations:
          memory: {{ (jenkins_master_memory | regex_replace('g', '') | int * 0.5) | int }}g
          cpus: '{{ jenkins_master_cpu_limit | float * 0.5 }}'
    
    # Logging Configuration
    logging:
      driver: "{{ jenkins_log_driver }}"
      options:
        max-size: "{{ jenkins_log_max_size }}"
        max-file: "{{ jenkins_log_max_files }}"
        tag: "jenkins-master-{{ i }}"
    
    # Health Check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:{{ jenkins_port }}/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    
    # Labels for identification and monitoring
    labels:
      - "service=jenkins-master"
      - "instance={{ i }}"
      - "cluster={{ jenkins_cluster_name }}"
      - "role=master"
      - "ha-enabled={{ jenkins_ha_enabled }}"
      - "monitoring=prometheus"
    
    # Network Configuration
    networks:
      - jenkins-ha-network

{% if i > 1 %}
    # HA Configuration - Secondary masters depend on primary
    depends_on:
      jenkins-master-1:
        condition: service_healthy
{% endif %}

{% endfor %}

# Network Definition
networks:
  jenkins-ha-network:
    name: {{ jenkins_network_name }}
    driver: {{ jenkins_network_driver }}
{% if jenkins_network_subnet is defined %}
    ipam:
      driver: default
      config:
        - subnet: {{ jenkins_network_subnet }}
          gateway: {{ jenkins_network_gateway }}
{% endif %}
    labels:
      - "project=jenkins-ha"
      - "environment={{ ansible_environment | default('production') }}"

# Volume Definitions
volumes:
{% for i in range(1, jenkins_master_count + 1) %}
  jenkins-home-{{ i }}:
    name: jenkins-home-{{ i }}
    driver: local
    labels:
      - "service=jenkins-master-{{ i }}"
      - "cluster={{ jenkins_cluster_name }}"
      - "backup=enabled"
{% endfor %}
  jenkins-shared:
    name: jenkins-shared
    driver: local
    driver_opts:
      type: none
      o: bind
      device: {{ shared_storage_path | default('/shared/jenkins') }}
    labels:
      - "service=jenkins-shared-storage"
      - "cluster={{ jenkins_cluster_name }}"
      - "backup=critical"

# Additional configuration for monitoring and maintenance
x-jenkins-common: &jenkins-common
  # Common configuration that can be extended
  user: "{{ jenkins_uid }}:{{ jenkins_gid }}"
  security_opt:
    - no-new-privileges:true
  cap_drop:
    - ALL
  cap_add:
    - CHOWN
    - DAC_OVERRIDE
    - FOWNER
    - SETUID
    - SETGID
  read_only: false
  tmpfs:
    - /tmp:noexec,nosuid,size=1G
  ulimits:
    nofile:
      soft: 65536
      hard: 65536
    nproc:
      soft: 32768
      hard: 32768