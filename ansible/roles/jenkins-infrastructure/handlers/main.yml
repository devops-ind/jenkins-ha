---
# Handlers for jenkins-infrastructure role
- name: restart jenkins-infrastructure service
  systemd:
    name: jenkins-infrastructure
    state: restarted
    enabled: yes
  listen: "restart jenkins-infrastructure"

- name: restart jenkins
  systemd:
    name: jenkins
    state: restarted
    enabled: yes
  listen: "restart jenkins"

- name: restart jenkins master containers
  community.docker.docker_container:
    name: "jenkins-{{ item.name }}-{{ item.active_environment }}"
    state: started
    restart: yes
  loop: "{{ jenkins_teams | default([]) }}"
  when: jenkins_container_runtime == 'docker'
  listen: "restart jenkins master containers"

- name: restart jenkins master containers (podman)
  containers.podman.podman_container:
    name: "jenkins-{{ item.name }}-{{ item.active_environment }}"
    state: started
    restart: yes
  loop: "{{ jenkins_teams | default([]) }}"
  when: jenkins_container_runtime == 'podman'  
  listen: "restart jenkins master containers"

- name: restart firewalld
  systemd:
    name: firewalld
    state: restarted
    enabled: yes
  listen: "restart firewalld"

- name: reload systemd
  systemd:
    daemon_reload: yes
  listen: "reload systemd"

- name: reload haproxy
  systemd:
    name: haproxy
    state: reloaded
    enabled: yes
  listen: "reload haproxy"

- name: restart haproxy
  systemd:
    name: haproxy
    state: restarted
    enabled: yes
  listen: "restart haproxy"

- name: restart jenkins-master
  systemd:
    name: jenkins-master
    state: restarted
    enabled: yes
    daemon_reload: yes
  listen: "restart jenkins-master"
  become: yes

- name: restart jenkins-haproxy
  systemd:
    name: jenkins-haproxy
    state: restarted
    enabled: yes
  listen: "restart jenkins-haproxy"

- name: reload jenkins-haproxy
  systemd:
    name: jenkins-haproxy
    state: reloaded
    enabled: yes
  listen: "reload jenkins-haproxy"
