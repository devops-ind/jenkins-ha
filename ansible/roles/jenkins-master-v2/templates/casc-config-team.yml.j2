# Jenkins Configuration as Code (JCasC) for Team: {{ item.team_name }}
# This configuration is team-specific and builds upon the base configuration

jenkins:
  systemMessage: |
    Welcome to Jenkins for Team {{ item.team_name | title }}!
    
    Environment: {{ item.active_environment | upper }}
    Team: {{ item.team_name | title }}
    
    This is a blue-green deployment ready Jenkins instance.

  globalNodeProperties:
    - envVars:
        env:
          - key: "JENKINS_TEAM"
            value: "{{ item.team_name }}"
          - key: "JENKINS_ENVIRONMENT" 
            value: "{{ item.active_environment | default('blue') }}"
          - key: "TEAM_NAMESPACE"
            value: "team-{{ item.team_name }}"
{% if item.env_vars is defined %}
{% for key, value in item.env_vars.items() %}
          - key: "{{ key }}"
            value: "{{ value }}"
{% endfor %}
{% endif %}

  # Team-specific node labels and executors
  numExecutors: {{ item.resources.executors | default(4) }}
  labelString: "{{ item.team_name }}-master jenkins-master team-{{ item.team_name }}"

  # Security configuration for team
  authorizationStrategy:
    projectMatrix:
      permissions:
        - "Overall/Read:authenticated"
        - "Job/Read:authenticated"
        - "View/Read:authenticated"
{% if item.team_admins is defined %}
{% for admin in item.team_admins %}
        - "Overall/Administer:{{ admin }}"
{% endfor %}
{% endif %}
{% if item.team_developers is defined %}
{% for developer in item.team_developers %}
        - "Job/Build:{{ developer }}"
        - "Job/Cancel:{{ developer }}"
        - "Job/Read:{{ developer }}"
        - "Job/Workspace:{{ developer }}"
{% endfor %}
{% endif %}

  # Team-specific agent configuration
  clouds:
    - docker:
        name: "{{ item.team_name }}-docker-cloud"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "{{ item.team_name }}-maven maven-{{ item.team_name }}"
            dockerTemplateBase:
              image: "jenkins/jenkins-agent-maven:{{ jenkins_agent_image_tag | default('latest') }}"
              mounts:
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "{{ item.resources.max_agents | default(10) }}"
            retentionStrategy:
              idleMinutes: 10
              
          - labelString: "{{ item.team_name }}-python python-{{ item.team_name }}"
            dockerTemplateBase:
              image: "jenkins/jenkins-agent-python:{{ jenkins_agent_image_tag | default('latest') }}"
              mounts:
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "{{ item.resources.max_agents | default(10) }}"
            retentionStrategy:
              idleMinutes: 10
              
          - labelString: "{{ item.team_name }}-nodejs nodejs-{{ item.team_name }}"
            dockerTemplateBase:
              image: "jenkins/jenkins-agent-nodejs:{{ jenkins_agent_image_tag | default('latest') }}"
              mounts:
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "{{ item.resources.max_agents | default(10) }}"
            retentionStrategy:
              idleMinutes: 10
              
          - labelString: "{{ item.team_name }}-dind docker-{{ item.team_name }}"
            dockerTemplateBase:
              image: "jenkins/jenkins-agent-dind:{{ jenkins_agent_image_tag | default('latest') }}"
              privileged: true
              mounts:
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "{{ item.resources.max_agents | default(5) }}"
            retentionStrategy:
              idleMinutes: 15

# Global tool configuration
tool:
  git:
    installations:
      - name: "Default"
        home: "git"
  
  maven:
    installations:
      - name: "Maven-3.9"
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.9.5"
  
  nodejs:
    installations:
      - name: "NodeJS-18"
        properties:
          - installSource:
              installers:
                - nodeJSInstaller:
                    id: "18.17.1"
                    npmPackagesRefreshHours: 72

# Team-specific security settings
security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  
  # CSRF Protection
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  
  # Agent protocols
  remotingSecurity:
    enabled: true

{% if item.webhooks_enabled | default(true) %}
# Webhook configuration for team
unclassified:
  gitHubPluginConfig:
    hookUrl: "{{ jenkins_webhook_base_url | default('http://jenkins.example.com') }}/github-webhook/"
  
  gitLabConnectionConfig:
    connections:
      - name: "{{ item.team_name }}-gitlab"
        url: "{{ item.gitlab_url | default('https://gitlab.example.com') }}"
        apiTokenId: "{{ item.team_name }}-gitlab-token"
{% endif %}

{% if item.slack_enabled | default(false) %}
  slackNotifier:
    teamDomain: "{{ item.slack_team | default('your-team') }}"
    token: "{{ item.slack_token | default('') }}"
    room: "#{{ item.team_name }}-builds"
{% endif %}

# Job DSL security
jobs:
  - script: |
      // Team-specific folder structure
      folder('{{ item.team_name | title }}') {
          displayName('{{ item.team_name | title }} Team')
          description('Jobs and pipelines for the {{ item.team_name }} team')
      }
      
      folder('{{ item.team_name | title }}/Infrastructure') {
          displayName('Infrastructure')
          description('Infrastructure and deployment jobs for {{ item.team_name }}')
      }
      
      folder('{{ item.team_name | title }}/Applications') {
          displayName('Applications')
          description('Application build and test jobs for {{ item.team_name }}')
      }
      
      folder('{{ item.team_name | title }}/Monitoring') {
          displayName('Monitoring')
          description('Monitoring and health check jobs for {{ item.team_name }}')
      }