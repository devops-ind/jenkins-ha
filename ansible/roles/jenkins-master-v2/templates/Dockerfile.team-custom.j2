# Team-Specific Jenkins Master Dockerfile
# Built from base image created by jenkins-images role

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# Build arguments
ARG TEAM_NAME={{ item.team_name }}
ARG BUILD_DATE
ARG VCS_REF

# Team-specific metadata
LABEL maintainer="DevOps Team" \
      org.label-schema.build-date=${BUILD_DATE} \
      org.label-schema.vcs-ref=${VCS_REF} \
      org.label-schema.schema-version="1.0" \
      team="${TEAM_NAME}" \
      description="Custom Jenkins Master for team ${TEAM_NAME}"

# Switch to root for customizations
USER root

{% if jenkins_master_team_plugins_enabled | default(true) and (item.custom_plugins is defined and item.custom_plugins | length > 0) %}
# Copy team-specific plugins list
COPY team-plugins.txt /usr/share/jenkins/ref/team-plugins.txt

# Install team-specific plugins
RUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/team-plugins.txt
{% endif %}

{% if jenkins_master_team_configs_enabled | default(true) %}
# Copy team-specific Jenkins Configuration as Code
COPY casc_configs/ /var/jenkins_home/casc_configs/
{% endif %}

{% if jenkins_master_team_seed_jobs_enabled | default(true) %}
# Copy team-specific seed jobs
COPY seed-jobs/ /var/jenkins_home/init.groovy.d/
{% endif %}

# Create team-specific directories
RUN mkdir -p /var/jenkins_home/jobs \
    && mkdir -p /var/jenkins_home/workspace \
    && mkdir -p /var/jenkins_home/builds \
    && mkdir -p /var/jenkins_home/logs

# Set permissions for jenkins user
RUN chown -R jenkins:jenkins /var/jenkins_home

# Switch back to jenkins user
USER jenkins

# Team-specific environment variables
ENV JENKINS_TEAM="{{ item.team_name }}" \
    JENKINS_TEAM_ENVIRONMENT="{{ item.active_environment | default('blue') }}" \
    JENKINS_TEAM_PORTS_WEB="{{ item.ports.web | default('8080') }}" \
    JENKINS_TEAM_PORTS_AGENT="{{ item.ports.agent | default('50000') }}"

{% if item.env_vars is defined and item.env_vars | length > 0 %}
# Additional team-specific environment variables
{% for key, value in item.env_vars.items() %}
ENV {{ key }}="{{ value }}"
{% endfor %}
{% endif %}

# Update Java options with team-specific settings
ENV JAVA_OPTS="${JAVA_OPTS} \
               -Djenkins.model.Jenkins.slaveAgentPort={{ item.ports.agent | default('50000') }} \
               -Djenkins.team.name={{ item.team_name }} \
               -Djenkins.team.environment={{ item.active_environment | default('blue') }}"

{% if item.labels is defined and item.labels.get('tier') == 'production' %}
# Production-specific optimizations
ENV JAVA_OPTS="${JAVA_OPTS} \
               -server \
               -XX:+UseG1GC \
               -XX:+UseStringDeduplication \
               -XX:+OptimizeStringConcat"
{% endif %}

# Team-specific Jenkins options
ENV JENKINS_OPTS="${JENKINS_OPTS} \
                  --sessionTimeout={{ item.session_timeout | default('1440') }} \
                  --sessionEviction={{ item.session_eviction | default('3600') }}"

# Expose team-specific ports
EXPOSE {{ item.ports.web | default('8080') }} {{ item.ports.agent | default('50000') }}

# Health check with team-specific port
HEALTHCHECK --interval=30s --timeout=10s --start-period=5m --retries=3 \
    CMD curl -f http://localhost:{{ item.ports.web | default('8080') }}/login || exit 1

# Team-specific labels for container management
LABEL jenkins.team="{{ item.team_name }}" \
      jenkins.environment="{{ item.active_environment | default('blue') }}" \
      jenkins.tier="{{ item.labels.tier | default('development') }}" \
      jenkins.ports.web="{{ item.ports.web | default('8080') }}" \
      jenkins.ports.agent="{{ item.ports.agent | default('50000') }}"