# Configuration file of Harbor

# The IP address or hostname to access admin UI and registry service.
hostname: {{ harbor_hostname | default(ansible_fqdn) }}

# http related config
http:
  # port for http, default is 80. If https enabled, this port will redirect to https port
  port: {{ harbor_http_port | default('80') }}

{% if harbor_https_enabled | default(false) %}
# https related config
https:
  # https port for harbor, default is 443
  port: {{ harbor_https_port | default('443') }}
  # The path of cert and key files for nginx
  certificate: {{ harbor_ssl_cert | default('/data/cert/server.crt') }}
  private_key: {{ harbor_ssl_key | default('/data/cert/server.key') }}
{% endif %}

# # Uncomment following will enable tls communication between all harbor components
# internal_tls:
#   # set enabled to true means internal tls is enabled
#   enabled: true
#   # put your cert and key files on dir
#   dir: /etc/harbor/tls/internal

# Uncomment external_url if you want to enable external proxy
# And when it enabled the hostname will no longer used
# external_url: https://reg.mydomain.com:8433

# The initial password of Harbor admin
# It only works in first time to install harbor
# Remember Change the admin password from UI after launching Harbor.
harbor_admin_password: {{ harbor_admin_password | default('Harbor12345') }}

# Harbor DB configuration
database:
  # The password for the root user of Harbor DB. Change this before any production use.
  password: {{ harbor_db_password | default('root123') }}
  # The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained.
  max_idle_conns: {{ harbor_db_max_idle_conns | default('50') }}
  # The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections.
  # Note: the default number of connections is 1024 for postgres of harbor.
  max_open_conns: {{ harbor_db_max_open_conns | default('1000') }}

# The default data volume
data_volume: {{ harbor_data_volume | default('/data') }}

# Harbor Storage settings by default is using /data dir on local filesystem
# Uncomment storage_service setting If you want to using external storage
# storage_service:
#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore
#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.
#   ca_bundle:

#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss
#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/
#   filesystem:
#     maxthreads: 100
#   # set disable to true when you want to disable registry redirect
#   redirect:
#     disabled: false

# Trivy configuration
trivy:
  # ignoreUnfixed The flag to display only fixed vulnerabilities
  ignore_unfixed: {{ harbor_trivy_ignore_unfixed | default('false') }}
  # skipUpdate The flag to enable or disable Trivy DB downloads from GitHub
  skip_update: {{ harbor_trivy_skip_update | default('false') }}
  # The offline_scan option prevents Trivy from sending API requests to identify dependencies.
  offline_scan: {{ harbor_trivy_offline_scan | default('false') }}
  # insecure The flag to skip verifying registry certificate
  insecure: {{ harbor_trivy_insecure | default('false') }}
  # github_token The GitHub access token to download Trivy DB
  # Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough
  # for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000
  # requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult
  # https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting .
  # You can create a GitHub token by following the instructions in
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
  # github_token: xxx

jobservice:
  # Maximum number of job workers in job service
  max_job_workers: {{ harbor_jobservice_max_workers | default('10') }}

notification:
  # Maximum retry count for webhook job
  webhook_job_max_retry: {{ harbor_webhook_job_max_retry | default('10') }}

chart:
  # Change the value of absolute_url to enabled can enable absolute url in chart
  absolute_url: {{ harbor_chart_absolute_url | default('disabled') }}

# Log configurations
log:
  # options are debug, info, warning, error, fatal
  level: {{ harbor_log_level | default('info') }}
  # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.
  rotate_count: {{ harbor_log_rotate_count | default('50') }}
  # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.
  # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G
  # are all valid.
  rotate_size: {{ harbor_log_rotate_size | default('200M') }}
  # The directory on host that store log
  location: {{ harbor_log_location | default('/var/log/harbor') }}

  # Uncomment following lines to enable external syslog endpoint.
  # external_endpoint:
  #   # protocol used to transmit log to external endpoint, options is tcp or udp
  #   protocol: tcp
  #   # The host of external endpoint
  #   host: localhost
  #   # Port of external endpoint
  #   port: 5140

#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!
_version: {{ harbor_version | default('2.5.0') }}

# Uncomment external_database if using external database.
# external_database:
#   harbor:
#     host: harbor_db_host
#     port: harbor_db_port
#     db_name: harbor_db_name
#     username: harbor_db_username
#     password: harbor_db_password
#     ssl_mode: disable
#     max_idle_conns: 2
#     max_open_conns: 0
#   notary_signer:
#     host: notary_signer_db_host
#     port: notary_signer_db_port
#     db_name: notary_signer_db_name
#     username: notary_signer_db_username
#     password: notary_signer_db_password
#     ssl_mode: disable
#   notary_server:
#     host: notary_server_db_host
#     port: notary_server_db_port
#     db_name: notary_server_db_name
#     username: notary_server_db_username
#     password: notary_server_db_password
#     ssl_mode: disable

# Uncomment external_redis if using external Redis server
# external_redis:
#   # support redis, redis+sentinel or redis+cluster
#   host: redis
#   port: 6379
#   password:
#   # sentinel_master_set must be set to support redis+sentinel
#   #sentinel_master_set:
#   # db_index 0 is for core, it's unchangeable
#   db_index: 0

# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.
# uaa:
#   ca_file: /path/to/ca

# Global proxy
# Config http proxy for components, e.g. http://my.proxy.com:3128
# Components doesn't need to connect to each others via http proxy.
# Remove component from `components` array if want disable proxy
# for it. If you want use proxy for replication, MUST enable proxy
# for core and jobservice, and set `http_proxy` and `https_proxy`.
# Add domain to the `no_proxy` field, when you want disable proxy
# for some special registry.
proxy:
  http_proxy: {{ harbor_http_proxy | default('') }}
  https_proxy: {{ harbor_https_proxy | default('') }}
  no_proxy: {{ harbor_no_proxy | default('') }}
  components:
    - core
    - jobservice
    - trivy

# metric:
#   enabled: false
#   port: 9090
#   path: /metrics

# Trace related config
# only can enable one trace provider(jaeger or otel) at the same time,
# and when using jaeger as provider, can only enable it with agent mode or collector mode.
# if using jaeger collector mode, uncomment endpoint and uncomment username, password if needed
# if using jaeger agent mode, uncomment agent_host and agent_port
# trace:
#   enabled: true
#   # set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth
#   sample_rate: 1
#   # # namespace used to differentiate different harbor services
#   # namespace:
#   # # attributes is a key value dict contains user defined attributes used to initialize trace provider
#   # attributes:
#   #   application: harbor
#   # # jaeger should be 1.26 or newer.
#   # jaeger:
#   #   endpoint: http://hostname:14268/api/traces
#   #   username:
#   #   password:
#   #   agent_host: hostname
#   #   agent_port: 6832
#   # otel:
#   #   endpoint: hostname:4318
#   #   url_path: /v1/traces
#   #   compression: false
#   #   insecure: true
#   #   timeout: 10s

# enable purge _upload directories
upload_purging:
  enabled: {{ harbor_upload_purging_enabled | default('true') }}
  # remove files in _upload directories which exist for a period of time, default is one week.
  age: {{ harbor_upload_purging_age | default('168h') }}
  # the interval of the purge operations
  interval: {{ harbor_upload_purging_interval | default('24h') }}
  dryrun: {{ harbor_upload_purging_dryrun | default('false') }}

# cache layer configurations
# If this feature enabled, harbor will cache the resource
# `project/project_metadata/repository/artifact/manifest` in the redis
# which can especially help to improve the performance of high concurrent
# manifest pulling.
# NOTICE
# If you are deploying Harbor in HA mode, make sure that all the harbor
# instances have the same behaviour, all with cacheLayer enabled or disabled,
# otherwise it can lead to potential data inconsistency.
cache:
  # default is not enabled.
  enabled: {{ harbor_cache_enabled | default('false') }}
  # default keep cache for one day.
  expire_hours: {{ harbor_cache_expire_hours | default('24') }}