---
# Unified Jenkins Master - Configuration and Directory Setup
# Supports both single-team and multi-team deployments

- name: Create Jenkins system user and group
  group:
    name: "{{ jenkins_user }}"
    gid: "{{ jenkins_gid }}"
    state: present
  become: yes
  tags: ['config', 'user']

- name: Create Jenkins system user
  user:
    name: "{{ jenkins_user }}"
    uid: "{{ jenkins_uid }}"
    group: "{{ jenkins_user }}"
    home: "{{ jenkins_home_dir }}"
    shell: /bin/bash
    system: yes
    create_home: yes
  become: yes
  tags: ['config', 'user']

# Create Jenkins initialization script directory
- name: Create Jenkins init.groovy.d directory
  file:
    path: "{{ jenkins_home_dir }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'
  tags: ['config', 'directories']

# Create directories for all teams (single or multi-team)
- name: Create team-specific Jenkins directories
  file:
    path: "{{ jenkins_home_dir }}/{{ item.team_name }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'
    recurse: yes
  loop: "{{ jenkins_effective_config }}"
  loop_control:
    label: "{{ item.team_name }}"
  tags: ['config', 'directories']

- name: Create blue-green environment directories for all teams
  file:
    path: "{{ jenkins_home_dir }}/{{ item.0.team_name }}/{{ item.1 }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'
    recurse: yes
  with_nested:
    - "{{ jenkins_effective_config }}"
    - ['blue', 'green']
  loop_control:
    label: "{{ item.0.team_name }}/{{ item.1 }}"
  tags: ['config', 'directories', 'blue-green']

- name: Create Jenkins scripts directory
  file:
    path: "{{ jenkins_home_dir }}/scripts"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'
  tags: ['config', 'directories', 'scripts']

- name: Create Jenkins Configuration as Code directories for all teams
  file:
    path: "{{ jenkins_home_dir }}/{{ item.0.team_name }}/{{ item.1 }}/casc_configs"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0755'
  with_nested:
    - "{{ jenkins_effective_config }}"
    - ['blue', 'green']
  loop_control:
    label: "{{ item.0.team_name }}/{{ item.1 }}"
  tags: ['config', 'directories', 'jcasc']

- name: Generate Jenkins Configuration as Code files for all teams
  template:
    src: jcasc/jenkins-config.yml.j2
    dest: "{{ jenkins_home_dir }}/{{ item.0.team_name }}/{{ item.1 }}/casc_configs/jenkins.yaml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0644'
  with_nested:
    - "{{ jenkins_effective_config }}"
    - ['blue', 'green']
  loop_control:
    label: "{{ item.0.team_name }}/{{ item.1 }}"
  vars:
    # Pass current team context to template
    jenkins_current_team: "{{ item.0 }}"
    jenkins_current_environment: "{{ item.1 }}"
  tags: ['config', 'jcasc']

# Copy Jenkins initialization scripts
- name: Copy DSL script approval initialization script
  copy:
    src: init-scripts/setup-dsl-approval.groovy
    dest: "{{ jenkins_home_dir }}/init.groovy.d/01-setup-dsl-approval.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: '0644'
  tags: ['config', 'init-scripts', 'dsl']
  notify: restart jenkins