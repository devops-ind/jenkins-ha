---
# Unified Jenkins Master - Docker Container Deployment
# Supports both single-team and multi-team deployments

- name: Deploy Jenkins Blue Environment containers for all teams (Docker)
  community.docker.docker_container:
    name: "jenkins-{{ item.team_name }}-blue"
    image: "{{ jenkins_master_image_registry }}/{{ jenkins_master_image_name }}:{{ jenkins_master_image_tag }}"
    state: "{{ 'started' if item.active_environment == 'blue' else 'stopped' }}"
    restart_policy: "{{ jenkins_master_restart_policy }}"
    networks:
      - name: "{{ jenkins_master_network_name }}"
    ports: "{{ item.active_environment == 'blue' | ternary(_blue_ports, []) }}"
    volumes:
      - "jenkins-{{ item.team_name }}-blue-home:{{ jenkins_master_container_home }}"
      - "jenkins-{{ item.team_name }}-shared:{{ jenkins_master_shared_path }}"
      - "/var/run/docker.sock:/var/run/docker.sock"
    env: "{{ _jenkins_env_vars | combine({'JENKINS_ENVIRONMENT': 'blue', 'JENKINS_TEAM': item.team_name}) }}"
    memory: "{{ item.resources.memory }}"
    cpus: "{{ item.resources.cpu }}"
    log_driver: "{{ jenkins_master_log_driver }}"
    log_options:
      max-size: "{{ jenkins_master_log_max_size }}"
      max-file: "{{ jenkins_master_log_max_files }}"
    labels: "{{ _jenkins_labels | combine({'environment': 'blue', 'active': item.active_environment == 'blue' | string, 'team': item.team_name}) }}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{ jenkins_master_port }}/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  vars:
    _blue_ports:
      - "{{ item.ports.web }}:{{ jenkins_master_port }}"
      - "{{ item.ports.agent }}:{{ jenkins_master_agent_port }}"
    _jenkins_env_vars: "{{ jenkins_master_env_vars | combine(item.env_vars | default({})) }}"
    _jenkins_labels: "{{ jenkins_master_labels | combine(item.labels | default({})) }}"
  loop: "{{ jenkins_effective_config }}"
  loop_control:
    label: "jenkins-{{ item.team_name }}-blue"
  register: jenkins_blue_docker
  tags: ['containers', 'docker', 'blue']

- name: Deploy Jenkins Green Environment containers for all teams (Docker)
  community.docker.docker_container:
    name: "jenkins-{{ item.team_name }}-green"
    image: "{{ jenkins_master_image_registry }}/{{ jenkins_master_image_name }}:{{ jenkins_master_image_tag }}"
    state: "{{ 'started' if item.active_environment == 'green' else 'stopped' }}"
    restart_policy: "{{ jenkins_master_restart_policy }}"
    networks:
      - name: "{{ jenkins_master_network_name }}"
    ports: "{{ item.active_environment == 'green' | ternary(_green_ports, []) }}"
    volumes:
      - "jenkins-{{ item.team_name }}-green-home:{{ jenkins_master_container_home }}"
      - "jenkins-{{ item.team_name }}-shared:{{ jenkins_master_shared_path }}"
      - "/var/run/docker.sock:/var/run/docker.sock"
    env: "{{ _jenkins_env_vars | combine({'JENKINS_ENVIRONMENT': 'green', 'JENKINS_TEAM': item.team_name}) }}"
    memory: "{{ item.resources.memory }}"
    cpus: "{{ item.resources.cpu }}"
    log_driver: "{{ jenkins_master_log_driver }}"
    log_options:
      max-size: "{{ jenkins_master_log_max_size }}"
      max-file: "{{ jenkins_master_log_max_files }}"
    labels: "{{ _jenkins_labels | combine({'environment': 'green', 'active': item.active_environment == 'green' | string, 'team': item.team_name}) }}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{ jenkins_master_port }}/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  vars:
    _green_ports:
      - "{{ item.ports.web }}:{{ jenkins_master_port }}"
      - "{{ item.ports.agent }}:{{ jenkins_master_agent_port }}"
    _jenkins_env_vars: "{{ jenkins_master_env_vars | combine(item.env_vars | default({})) }}"
    _jenkins_labels: "{{ jenkins_master_labels | combine(item.labels | default({})) }}"
  loop: "{{ jenkins_effective_config }}"
  loop_control:
    label: "jenkins-{{ item.team_name }}-green"
  register: jenkins_green_docker  
  tags: ['containers', 'docker', 'green']