# Jenkins Configuration as Code for {{ jenkins_master_config.team_name }}
# Environment: {{ jenkins_master_config.active_environment }}
# Generated by Ansible jenkins-master role

jenkins:
  systemMessage: |
    Jenkins Master for {{ jenkins_master_config.team_name | title }} Team
    Environment: {{ jenkins_master_config.active_environment | upper }}
    Managed by Ansible jenkins-master role
    
  numExecutors: 0  # Use only dynamic agents
  mode: EXCLUSIVE
  scmCheckoutRetryCount: 3
  
  # Security Configuration
  {% if jenkins_master_security_enabled %}
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "${JENKINS_ADMIN_PASSWORD:-admin123}"
          properties:
            - "hudson.model.User$UserProperty":
                primaryView: "all"
  
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  {% endif %}
  
  # Cloud Configuration for Dynamic Agents
  clouds:
    - docker:
        name: "{{ jenkins_master_config.team_name }}-docker-agents"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "{{ jenkins_master_config.team_name }}-maven"
            dockerTemplateBase:
              image: "{{ jenkins_master_image_registry }}/jenkins/maven-agent:{{ jenkins_master_dynamic_agent_image_tag }}"
              network: "{{ jenkins_master_network_name }}"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "10"
            retentionStrategy:
              idleMinutes: 10
            nodeProperties:
              - envVars:
                  env:
                    - key: "TEAM_NAME"
                      value: "{{ jenkins_master_config.team_name }}"
                    - key: "JENKINS_ENVIRONMENT"
                      value: "{{ jenkins_master_config.active_environment }}"
          
          - labelString: "{{ jenkins_master_config.team_name }}-python"
            dockerTemplateBase:
              image: "{{ jenkins_master_image_registry }}/jenkins/python-agent:{{ jenkins_master_dynamic_agent_image_tag }}"
              network: "{{ jenkins_master_network_name }}"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "5"
            retentionStrategy:
              idleMinutes: 10
            nodeProperties:
              - envVars:
                  env:
                    - key: "TEAM_NAME"
                      value: "{{ jenkins_master_config.team_name }}"
                    - key: "JENKINS_ENVIRONMENT"
                      value: "{{ jenkins_master_config.active_environment }}"
          
          - labelString: "{{ jenkins_master_config.team_name }}-nodejs"
            dockerTemplateBase:
              image: "{{ jenkins_master_image_registry }}/jenkins/nodejs-agent:{{ jenkins_master_dynamic_agent_image_tag }}"
              network: "{{ jenkins_master_network_name }}"
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "5"
            retentionStrategy:
              idleMinutes: 10
            nodeProperties:
              - envVars:
                  env:
                    - key: "TEAM_NAME"
                      value: "{{ jenkins_master_config.team_name }}"
                    - key: "JENKINS_ENVIRONMENT"
                      value: "{{ jenkins_master_config.active_environment }}"

  # Global Tool Configuration
  globalNodeProperties:
    - envVars:
        env:
          - key: "TEAM_NAME"
            value: "{{ jenkins_master_config.team_name }}"
          - key: "JENKINS_ENVIRONMENT"
            value: "{{ jenkins_master_config.active_environment }}"
          - key: "JENKINS_URL"
            value: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_config.ports.web }}"

# Credentials Configuration
credentials:
  system:
    domainCredentials:
      - credentials:
          {% if jenkins_master_config.credentials is defined %}
          {% for cred in jenkins_master_config.credentials %}
          - {{ cred.type }}:
              scope: {{ cred.scope | default('GLOBAL') }}
              id: "{{ cred.id }}"
              {% for key, value in cred.items() %}
              {% if key not in ['type', 'scope', 'id'] %}
              {{ key }}: "{{ value }}"
              {% endif %}
              {% endfor %}
          {% endfor %}
          {% endif %}

# Job DSL Configuration
jobs:
  - script: |
      folder('{{ jenkins_master_config.team_name | title }}') {
          displayName('{{ jenkins_master_config.team_name | title }} Team Jobs')
          description('Jobs for the {{ jenkins_master_config.team_name }} team - {{ jenkins_master_config.active_environment }} environment')
      }
      
      pipelineJob('{{ jenkins_master_config.team_name | title }}/seed-job') {
          displayName('Job DSL Seed Job')
          description('Automatically creates jobs from DSL scripts')
          definition {
              cpsScm {
                  scm {
                      git {
                          remote {
                              url('${GIT_REPO_URL}')
                              credentials('git-credentials')
                          }
                          branches('*/main')
                      }
                  }
                  scriptPath('jenkins-dsl/seed.groovy')
              }
          }
          triggers {
              scm('H/5 * * * *')
          }
      }

# Security Configuration
security:
  {% if jenkins_master_csrf_protection %}
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  {% endif %}
  
  # Agent protocols
  remotingCLI:
    enabled: false
  
  # Disable CLI over remoting
  cli:
    enabled: false

# Monitoring Configuration
{% if jenkins_master_monitoring_enabled %}
unclassified:
  prometheusConfiguration:
    collectDiskUsage: true
    collectNodeStatus: true
    countSuccessfulBuilds: true
    countUnstableBuilds: true
    countFailedBuilds: true
    fetchTestResults: true
    processingDisabledBuilds: true
    collectBuildStatus: true
{% endif %}