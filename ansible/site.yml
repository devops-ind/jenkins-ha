---
# Main Jenkins Infrastructure Orchestration Playbook
# Production-grade deployment with native container management

# Dynamic host selection based on deployment_mode
- name: Set target hosts based on deployment mode
  hosts: localhost
  gather_facts: no
  run_once: true
  tasks:
    - name: Determine target hosts for deployment
      set_fact:
        target_hosts: >-
          {% if hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') == 'devcontainer' %}
          localhost
          {% elif hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') == 'production' %}
          jenkins_masters:monitoring:harbor:load_balancers:shared_storage
          {% elif hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') == 'staging' %}
          jenkins_masters:monitoring
          {% else %}
          localhost
          {% endif %}
        jenkins_target_hosts: >-
          {% if hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') == 'devcontainer' %}
          localhost
          {% elif hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') in ['production', 'staging'] %}
          jenkins_masters
          {% else %}
          localhost
          {% endif %}
        monitoring_target_hosts: >-
          {% if hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') == 'devcontainer' %}
          localhost
          {% elif hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') in ['production', 'staging'] %}
          monitoring
          {% else %}
          localhost
          {% endif %}
    
    - name: Display deployment configuration
      debug:
        msg:
          - "Deployment Mode: {{ hostvars[groups['all'][0]]['deployment_mode'] | default('localhost') }}"
          - "Target Hosts: {{ target_hosts }}"
          - "Jenkins Hosts: {{ jenkins_target_hosts }}"
          - "Monitoring Hosts: {{ monitoring_target_hosts }}"

- name: Bootstrap Infrastructure
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'all') }}"
  become: yes
  gather_facts: yes
  serial: "{{ serial_execution | default('100%') }}"
  vars:
    deployment_environment: "{{ lookup('env', 'DEPLOYMENT_ENV') | default('local') }}"
  roles:
    - role: common
      tags: ['common', 'bootstrap']
    - role: docker
      tags: ['docker', 'bootstrap']
    - role: shared-storage
      tags: ['storage', 'bootstrap']
      when: shared_storage_enabled | default(true)
    - role: security
      tags: ['security', 'bootstrap']

- name: Setup Harbor Registry Integration
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'harbor') }}"
  become: yes
  gather_facts: yes
  vars:
    harbor_registry_url: "{{ harbor_registry_url }}"
    harbor_project: "{{ harbor_project }}"
  roles:
    - role: harbor
      tags: ['harbor', 'registry']
      when: harbor_integration_enabled | default(true)

- name: Build and Manage Jenkins Images
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'jenkins_masters[0]') }}"  # Build on primary master only
  become: yes
  gather_facts: yes
  vars:
    jenkins_images_build: true
    jenkins_images_push: true
  roles:
    - role: jenkins-images
      tags: ['images', 'build']
      when: build_jenkins_images | default(false)

- name: Deploy Jenkins Infrastructure
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'jenkins_masters') }}"
  become: yes
  gather_facts: yes
  serial: 1  # Deploy masters one by one for HA
  vars:
    jenkins_ha_enabled: "{{ groups['jenkins_masters'] | default([]) | length > 1 }}"
    jenkins_master_priority: "{{ play_hosts.index(inventory_hostname) + 1 }}"
  roles:
    - role: jenkins-infrastructure
      tags: ['jenkins', 'deploy']
  post_tasks:
    - name: Wait for Jenkins to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/login"
        method: GET
        status_code: [200, 403]
      register: jenkins_ready
      until: jenkins_ready is succeeded
      retries: 60
      delay: 10
      tags: ['jenkins', 'verify']

- name: Configure High Availability
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'load_balancers:jenkins_masters') }}"
  become: yes
  gather_facts: yes
  roles:
    - role: high-availability
      tags: ['ha', 'cluster']
      when: 
        - jenkins_ha_enabled | default(false)
        - groups['jenkins_masters'] | default([]) | length > 1

# Dynamic Jenkins Agents are configured via JCasC - no separate deployment needed

- name: Setup Monitoring Stack
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'monitoring') }}"
  become: yes
  gather_facts: yes
  roles:
    - role: monitoring
      tags: ['monitoring', 'prometheus', 'grafana']
      when: monitoring_enabled | default(true)

- name: Configure Backup System
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'shared_storage:jenkins_masters') }}"
  become: yes
  gather_facts: yes
  roles:
    - role: backup
      tags: ['backup', 'storage']
      when: backup_enabled | default(true)

- name: Post-Deployment Verification
  hosts: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('localhost', 'jenkins_masters:monitoring') }}"
  become: no
  gather_facts: yes
  tasks:
    - name: Verify Jenkins master accessibility
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ jenkins_master_port }}/api/json"
        method: GET
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        force_basic_auth: yes
      register: jenkins_api_check
      ignore_errors: yes
      tags: ['verify', 'api']

    - name: Verify monitoring endpoints
      uri:
        url: "{{ (deployment_mode | default('devcontainer') == 'devcontainer') | ternary('http://localhost:9090/api/v1/query?query=up', 'http://' + hostvars[groups['monitoring'][0]]['ansible_default_ipv4']['address'] + ':9090/api/v1/query?query=up') }}"
        method: GET
      register: prometheus_check
      when: 
        - monitoring_enabled | default(true)
        - (deployment_mode | default('devcontainer') == 'devcontainer') or (groups['monitoring'] is defined and groups['monitoring'] | length > 0)
      ignore_errors: yes
      tags: ['verify', 'monitoring']

    - name: Display deployment summary
      debug:
        msg: |
          🎉 Jenkins Infrastructure Deployment Completed!
          
          📋 Access Information:
          {% if deployment_mode | default('devcontainer') == 'devcontainer' %}
          Jenkins Masters: http://localhost:{{ jenkins_master_port | default(8080) }}
          {% else %}
          {% for host in groups['jenkins_masters'] | default([]) %}
          Jenkins Master {{ loop.index }}: http://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ jenkins_master_port }}
          {% endfor %}
          {% endif %}
          {% if jenkins_ha_enabled | default(false) %}
          Load Balancer VIP: http://{{ jenkins_vip }}:{{ jenkins_master_port }}
          {% endif %}
          {% if monitoring_enabled | default(true) %}
          {% if deployment_mode | default('devcontainer') == 'devcontainer' %}
          Prometheus: http://localhost:9090
          Grafana: http://localhost:3000
          {% elif groups['monitoring'] is defined and groups['monitoring'] | length > 0 %}
          Prometheus: http://{{ hostvars[groups['monitoring'][0]]['ansible_default_ipv4']['address'] }}:9090
          Grafana: http://{{ hostvars[groups['monitoring'][0]]['ansible_default_ipv4']['address'] }}:3000
          {% endif %}
          {% endif %}
          
          🔧 Default Credentials:
          Username: {{ jenkins_admin_user }}
          Password: [ENCRYPTED - Check vault]
          
          🏷️ Available Agent Labels:
          • dind docker-manager privileged (dynamic)
          • maven java-build (dynamic)
          • python python-build (dynamic)
          • nodejs frontend-build (dynamic)
          
          📊 Monitoring Status: {{ monitoring_enabled | default(true) and 'Enabled' or 'Disabled' }}
          💾 Backup Status: {{ backup_enabled | default(true) and 'Enabled' or 'Disabled' }}
          🏔️ HA Status: {{ jenkins_ha_enabled | default(false) and 'Active' or 'Single Node' }}
      tags: ['verify', 'summary']